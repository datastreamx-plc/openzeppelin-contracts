{
  "contractName": "GeoRewards",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getNextTokenId()\":{\"details\":\"Returns the next token id See {ERC721-_mint}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Overload {grantRole} to track enumerable memberships\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Overload {renounceRole} to track enumerable memberships\"},\"revokeRole(bytes32,address)\":{\"details\":\"Overload {revokeRole} to track enumerable memberships\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/presets/GeoRewards.sol\":\"GeoRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5280fcd7ad723a1e6fd67b02f1c76764b49f97994323464d5eabf7dc5428ae6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1346c57cc74b5cb54f1bf3b242c20df229250f7a297c91914811ce3a7014237a\",\"dweb:/ipfs/QmQF4AhXUpM9ZXnemVUN1fm8Dn1NnJHxLNgWfGwmHMbiG1\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x81153fca5efe0cd56f372066f87f4e357e29f677d5bf96d9d1e088156125977a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d415cf03935dd2edc1d5c742e7b3505bdddcef00a14e1380fc223b2ab0ac309\",\"dweb:/ipfs/QmU9FaW6SCqxpbPTLRbgakQgMefRwxNbUupRHjSy9RVPFP\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x28e11d1cc796fb80513c08627d7c7699d70d1a759badde5e15612f01b9a13c97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c10fc86e09bd35f7f9f53a9b0b850e9469b76bfb317ea429e4d876af797ebd7\",\"dweb:/ipfs/QmYV4WKts5bU8gaUbwtxaBZb5dVvygJZEdSWvpf5j9AmvH\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x4e5ae3d92e4ea72f00e789a0585c615520ed957cb4ba26c98ddadf77911911e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922a2e03413dc53b687bc51b8e630f003a0a68dc7d0bf83d342831c5f6a094f5\",\"dweb:/ipfs/QmSbHcpbQGUHYm7gmg7WRq9FvSoCDYSTccp96h2ZsnuzVa\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x11779ef6a1b4d8f0884b8e37ccb6cee2b3a9324122e90a8a5026acdb63e7a948\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356477b07617e8e8b13af07b64df03cd6453e2d2781e211ecc2efc8ddf7eb307\",\"dweb:/ipfs/QmYZQoathUDDiA3sBn6MUnAmFkBbDsRNMSZaUAnGT5MD3c\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xfba81987894dbeac860ff492218a59dcf4e65183d00553339527408fc5f0a377\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d7fa8edecf174c7c458cbd72ed8c601d08ff9ced0a1712223b9b23d0c32428f\",\"dweb:/ipfs/Qmf1XARFR2wnQrwiP45R2m2Wec7PLQc8AmB9ZzqgVFu9DL\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xc1753e4d2ad5235ff7e44840dfee58513037d9998c4df14d30a06cd6aeacdb2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cba1e325b03b7af716359580f5b824588540cb683f3e27611ad37a82e9f3324c\",\"dweb:/ipfs/Qmce9NqhQo3tBBj8GEJoTYE5mRHVB7MiyBerWFhjsyPCdM\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xfde6301b55c4956ca7e437275df213c06d9309e5718549b5d853de340c46cd2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b0b314ec4d29a9e9bb324def9a0528d25dd99355ec0850d7ed37905da40655f\",\"dweb:/ipfs/QmbJuSGJ51BoKpNjCzW67pVyKMZDWGzdP5g4DVhqfAKNPs\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xb3f9ce159ad9a2dec5a2cf61131f9d119532d921feaa7e054d98a84c2dda1e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5ba3b71ba905797f57987fe312dc577a14cba69bdcae2f58ae1f31a8b831fb6\",\"dweb:/ipfs/QmY5k2M2nwkw3tioA1r8K4tJa5dLC4EsTS6fpT63DAMruV\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xe045fad82846c7c31079dfbed9df29774c825f84d78d668f55316651965287a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a358dfab538ede9bc14ddd22f35d8e9f4fda7a5a6357e6e19f2bfe16ad08e8\",\"dweb:/ipfs/QmUG7zWLXtRwteMf5Uj7myaWx5osar4sRSL6yDALksKAME\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x1ff0e6d4e5bbad46bb04fa405915d186674356efbff083c2f0709cbd4974ba9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ad1b2fa6c971450aa4357e42cc4a158d64d82e369b0fdc5f2ccd5a77c6aefc\",\"dweb:/ipfs/Qme9vEANEvtsrznow1S9zRJmBUWB7o8G6P5HcMXho8Erqs\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/presets/GeoRewards.sol\":{\"keccak256\":\"0x89ab5deea60bed9623c39028b134651a9c1b1a78fb1b41af015da69e6d016e88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c614a02f1ce21a0dd34ec873c5cb7caf2936822d603237b9fbbbcf774262d29\",\"dweb:/ipfs/QmRgV4vN1LR9RpZyCN5ZfEeu9S7VodZvzNpjEdgfxUwJrR\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x56c55493b8912cb4729acd8a226a37dfb815c104cb57536a899bdaa708b45e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13456b3168b87f09c352f0074f4942b07651b6c1e153860879c3ae9ae0426cb4\",\"dweb:/ipfs/QmZnZ9FEYxGBGx1AqRSv85XZwN9pBDYJxUKQ2ydYdQcyDj\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xd66de64ebb51d57721ac10bb1571dc8b2798cd48723b8222341bc0e65372e050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b561766010211e50ffdc7363fb2227d15e1c846d1ee9ff33532a86fce8b6d5\",\"dweb:/ipfs/Qme61ahYQqCyYLhQmF4cyKe539E9f4HK1d9PrEb4MDKEtr\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0x43e76c768514701e2fbfa2a43644b9d42add54d157903f1c1f896eff8a7802b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e2ff83534dd0f95435a5a3529384e34a806ab8b474faed26390b4868b949f39\",\"dweb:/ipfs/QmV69ytxWN416Nsf6Hvx8CxXcjZoA86Qj97Xfp6cnVWmNr\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x48c16c461709fc32694db45f731ce8c2280df38696ce040839e526218fb92bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ac46a05d90f4fcf6c14f11a14b6780745ec65f4321c55ad968c453516b58a4\",\"dweb:/ipfs/QmP27UDVFVsX7F1nAmAseRmzNLcoExuUQmtyhotSEpzoM2\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x071cfd008ed1810ddf23f56bd1ce2f0c3983bc291559067e94618547f579e1f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3235dc4cbf8fe1bde8426a0515c2d19205953cce2bef84e635a74b1b0140250\",\"dweb:/ipfs/QmcLniP23L9VH3rSdoE4YnLosayZELS38z6HJCZQ3Q4Vq2\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x7e30ce048ac2ce3cc97d725487ed5a82192bb939456f46e0cbe38f1b48644f9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93406f5266094615e2b829d0eb4a3a668c72a3a6562da91a9ea9044cd001dd80\",\"dweb:/ipfs/QmUqT5ZLn5HTvE4Bas9BA5RSCamz4p3KwbvEsNvNJ2taav\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5ae55c60f20c356f12252701be46923a4e968b8fa8c54939de8c9c8cbdb75964\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae4a7cf0603d2c3ea50c688d65d125f99e857645dc6855c9db24a6f56593bab7\",\"dweb:/ipfs/QmdTApGGKGyN4GXSrxZn322zgGL5tjp4czZncGTDvvqCYL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004c6938038062004c69833981810160405281019062000037919062000508565b8282816002908051906020019062000051929190620003e6565b5080600390805190602001906200006a929190620003e6565b5050506000600c60006101000a81548160ff02191690831515021790555080600e9080519060200190620000a0929190620003e6565b50620000c56000801b620000b96200015060201b60201c565b6200015860201b60201c565b620001067f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000fa6200015060201b60201c565b6200015860201b60201c565b620001477f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6200013b6200015060201b60201c565b6200015860201b60201c565b505050620006da565b600033905090565b6200016f8282620001a060201b620013441760201c565b6200019b8160016000858152602001908152602001600020620001b660201b620013521790919060201c565b505050565b620001b28282620001ee60201b60201c565b5050565b6000620001e6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620002df60201b60201c565b905092915050565b6200020082826200035960201b60201c565b620002db57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002806200015060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002f38383620003c360201b60201c565b6200034e57826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000353565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b828054620003f49062000646565b90600052602060002090601f01602090048101928262000418576000855562000464565b82601f106200043357805160ff191683800117855562000464565b8280016001018555821562000464579182015b828111156200046357825182559160200191906001019062000446565b5b50905062000473919062000477565b5090565b5b808211156200049257600081600090555060010162000478565b5090565b6000620004ad620004a784620005dd565b620005a9565b905082815260208101848484011115620004c657600080fd5b620004d384828562000610565b509392505050565b600082601f830112620004ed57600080fd5b8151620004ff84826020860162000496565b91505092915050565b6000806000606084860312156200051e57600080fd5b600084015167ffffffffffffffff8111156200053957600080fd5b6200054786828701620004db565b935050602084015167ffffffffffffffff8111156200056557600080fd5b6200057386828701620004db565b925050604084015167ffffffffffffffff8111156200059157600080fd5b6200059f86828701620004db565b9150509250925092565b6000604051905081810181811067ffffffffffffffff82111715620005d357620005d2620006ab565b5b8060405250919050565b600067ffffffffffffffff821115620005fb57620005fa620006ab565b5b601f19601f8301169050602081019050919050565b60005b838110156200063057808201518184015260208101905062000613565b8381111562000640576000848401525b50505050565b600060028204905060018216806200065f57607f821691505b602082108114156200067657620006756200067c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61457f80620006ea6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063b88d4fde116100a2578063d539139311610071578063d5391393146105c9578063d547741f146105e7578063e63ab1e914610603578063e985e9c514610621576101f0565b8063b88d4fde1461052f578063c87b56dd1461054b578063ca15c8731461057b578063caa0f92a146105ab576101f0565b806391d14854116100de57806391d14854146104a757806395d89b41146104d7578063a217fddf146104f5578063a22cb46514610513576101f0565b80636a6278421461042157806370a082311461043d5780638456cb591461046d5780639010d07c14610477576101f0565b80632f745c591161018757806342966c681161015657806342966c68146103875780634f6ccce7146103a35780635c975abb146103d35780636352211e146103f1576101f0565b80632f745c591461031557806336568abe146103455780633f4ba83a1461036157806342842e0e1461036b576101f0565b806318160ddd116101c357806318160ddd1461028f57806323b872dd146102ad578063248a9ca3146102c95780632f2ff15d146102f9576101f0565b806301ffc9a7146101f557806306fdde0314610225578063081812fc14610243578063095ea7b314610273575b600080fd5b61020f600480360381019061020a9190613182565b610651565b60405161021c9190613d6b565b60405180910390f35b61022d610663565b60405161023a9190613da1565b60405180910390f35b61025d600480360381019061025891906131d4565b6106f5565b60405161026a9190613d04565b60405180910390f35b61028d600480360381019061028891906130a5565b61077a565b005b610297610892565b6040516102a49190614123565b60405180910390f35b6102c760048036038101906102c29190612f9f565b61089f565b005b6102e360048036038101906102de91906130e1565b6108ff565b6040516102f09190613d86565b60405180910390f35b610313600480360381019061030e919061310a565b61091e565b005b61032f600480360381019061032a91906130a5565b610952565b60405161033c9190614123565b60405180910390f35b61035f600480360381019061035a919061310a565b6109f7565b005b610369610a2b565b005b61038560048036038101906103809190612f9f565b610aa5565b005b6103a1600480360381019061039c91906131d4565b610ac5565b005b6103bd60048036038101906103b891906131d4565b610b21565b6040516103ca9190614123565b60405180910390f35b6103db610bb8565b6040516103e89190613d6b565b60405180910390f35b61040b600480360381019061040691906131d4565b610bcf565b6040516104189190613d04565b60405180910390f35b61043b60048036038101906104369190612f3a565b610c81565b005b61045760048036038101906104529190612f3a565b610d11565b6040516104649190614123565b60405180910390f35b610475610dc9565b005b610491600480360381019061048c9190613146565b610e43565b60405161049e9190613d04565b60405180910390f35b6104c160048036038101906104bc919061310a565b610e72565b6040516104ce9190613d6b565b60405180910390f35b6104df610edc565b6040516104ec9190613da1565b60405180910390f35b6104fd610f6e565b60405161050a9190613d86565b60405180910390f35b61052d60048036038101906105289190613069565b610f75565b005b61054960048036038101906105449190612fee565b6110f6565b005b610565600480360381019061056091906131d4565b611158565b6040516105729190613da1565b60405180910390f35b610595600480360381019061059091906130e1565b6111ff565b6040516105a29190614123565b60405180910390f35b6105b3611223565b6040516105c09190614123565b60405180910390f35b6105d1611234565b6040516105de9190613d86565b60405180910390f35b61060160048036038101906105fc919061310a565b611258565b005b61060b61128c565b6040516106189190613d86565b60405180910390f35b61063b60048036038101906106369190612f63565b6112b0565b6040516106489190613d6b565b60405180910390f35b600061065c82611382565b9050919050565b6060600280546106729061435d565b80601f016020809104026020016040519081016040528092919081815260200182805461069e9061435d565b80156106eb5780601f106106c0576101008083540402835291602001916106eb565b820191906000526020600020905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b6000610700826113fc565b61073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690613fe3565b60405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061078582610bcf565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90614043565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610815611468565b73ffffffffffffffffffffffffffffffffffffffff16148061084457506108438161083e611468565b6112b0565b5b610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a90613f63565b60405180910390fd5b61088d8383611470565b505050565b6000600a80549050905090565b6108b06108aa611468565b82611529565b6108ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e690614063565b60405180910390fd5b6108fa838383611607565b505050565b6000806000838152602001908152602001600020600101549050919050565b6109288282611863565b61094d816001600085815260200190815260200160002061135290919063ffffffff16565b505050565b600061095d83610d11565b821061099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099590613e43565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610a0182826118c9565b610a26816001600085815260200190815260200160002061194c90919063ffffffff16565b505050565b610a5c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a57611468565b610e72565b610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906140e3565b60405180910390fd5b610aa361197c565b565b610ac0838383604051806020016040528060008152506110f6565b505050565b610ad6610ad0611468565b82611529565b610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0c906140c3565b60405180910390fd5b610b1e81611a1e565b50565b6000610b2b610892565b8210610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390614083565b60405180910390fd5b600a8281548110610ba6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b6000600c60009054906101000a900460ff16905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f90613fa3565b60405180910390fd5b80915050919050565b610cb27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610cad611468565b610e72565b610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce8906140a3565b60405180910390fd5b610d0481610cff600d611b2f565b611b3d565b610d0e600d611d0b565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7990613f83565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610dfa7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610df5611468565b610e72565b610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3090613ea3565b60405180910390fd5b610e41611d21565b565b6000610e6a8260016000868152602001908152602001600020611dc490919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060038054610eeb9061435d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f179061435d565b8015610f645780601f10610f3957610100808354040283529160200191610f64565b820191906000526020600020905b815481529060010190602001808311610f4757829003601f168201915b5050505050905090565b6000801b81565b610f7d611468565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe290613ee3565b60405180910390fd5b8060076000610ff8611468565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166110a5611468565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110ea9190613d6b565b60405180910390a35050565b611107611101611468565b83611529565b611146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113d90614063565b60405180910390fd5b61115284848484611dde565b50505050565b6060611163826113fc565b6111a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119990614023565b60405180910390fd5b60006111ac611e3a565b905060008151116111cc57604051806020016040528060008152506111f7565b806111d684611ecc565b6040516020016111e7929190613ce0565b6040516020818303038152906040525b915050919050565b600061121c60016000848152602001908152602001600020612079565b9050919050565b600061122f600d611b2f565b905090565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611262828261208e565b611287816001600085815260200190815260200160002061194c90919063ffffffff16565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61134e82826120f4565b5050565b600061137a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6121d4565b905092915050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113f557506113f482612244565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166114e383610bcf565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611534826113fc565b611573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156a90613f03565b60405180910390fd5b600061157e83610bcf565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115ed57508373ffffffffffffffffffffffffffffffffffffffff166115d5846106f5565b73ffffffffffffffffffffffffffffffffffffffff16145b806115fe57506115fd81856112b0565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661162782610bcf565b73ffffffffffffffffffffffffffffffffffffffff161461167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167490614003565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e490613ec3565b60405180910390fd5b6116f8838383612326565b611703600082611470565b6001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117539190614269565b925050819055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117aa91906141e2565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61187c61186f836108ff565b611877611468565b610e72565b6118bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b290613e03565b60405180910390fd5b6118c582826120f4565b5050565b6118d1611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193590614103565b60405180910390fd5b6119488282612336565b5050565b6000611974836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612417565b905092915050565b611984610bb8565b6119c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ba90613e23565b60405180910390fd5b6000600c60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611a07611468565b604051611a149190613d04565b60405180910390a1565b6000611a2982610bcf565b9050611a3781600084612326565b611a42600083611470565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a929190614269565b925050819055506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba490613fc3565b60405180910390fd5b611bb6816113fc565b15611bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bed90613e83565b60405180910390fd5b611c0260008383612326565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c5291906141e2565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b611d29610bb8565b15611d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6090613f43565b60405180910390fd5b6001600c60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611dad611468565b604051611dba9190613d04565b60405180910390a1565b6000611dd38360000183612595565b60001c905092915050565b611de9848484611607565b611df58484848461262f565b611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b90613e63565b60405180910390fd5b50505050565b6060600e8054611e499061435d565b80601f0160208091040260200160405190810160405280929190818152602001828054611e759061435d565b8015611ec25780601f10611e9757610100808354040283529160200191611ec2565b820191906000526020600020905b815481529060010190602001808311611ea557829003601f168201915b5050505050905090565b60606000821415611f14576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612074565b600082905060005b60008214611f46578080611f2f9061438f565b915050600a82611f3f9190614238565b9150611f1c565b60008167ffffffffffffffff811115611f88577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611fba5781602001600182028036833780820191505090505b5090505b6000851461206d57600182611fd39190614269565b9150600a85611fe291906143d8565b6030611fee91906141e2565b60f81b81838151811061202a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856120669190614238565b9450611fbe565b8093505050505b919050565b6000612087826000016127c6565b9050919050565b6120a761209a836108ff565b6120a2611468565b610e72565b6120e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120dd90613f23565b60405180910390fd5b6120f08282612336565b5050565b6120fe8282610e72565b6121d057600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612175611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006121e083836127d7565b61223957826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061223e565b600090505b92915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061230f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061231f575061231e826127fa565b5b9050919050565b612331838383612874565b505050565b6123408282610e72565b1561241357600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506123b8611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080836001016000848152602001908152602001600020549050600081146125895760006001826124499190614269565b90506000600186600001805490506124619190614269565b905060008660000182815481106124a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050808760000184815481106124eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555083876001016000838152602001908152602001600020819055508660000180548061254d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061258f565b60009150505b92915050565b6000818360000180549050116125e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125d790613dc3565b60405180910390fd5b82600001828154811061261c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60006126508473ffffffffffffffffffffffffffffffffffffffff166128cc565b156127b9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612679611468565b8786866040518563ffffffff1660e01b815260040161269b9493929190613d1f565b602060405180830381600087803b1580156126b557600080fd5b505af19250505080156126e657506040513d601f19601f820116820180604052508101906126e391906131ab565b60015b612769573d8060008114612716576040519150601f19603f3d011682016040523d82523d6000602084013e61271b565b606091505b50600081511415612761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161275890613e63565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506127be565b600190505b949350505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061286d575061286c826128df565b5b9050919050565b61287f838383612959565b612887610bb8565b156128c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128be90613de3565b60405180910390fd5b505050565b600080823b905060008111915050919050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612952575061295182612a6d565b5b9050919050565b612964838383612ad7565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156129a7576129a281612adc565b6129e6565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146129e5576129e48382612b25565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612a2957612a2481612c92565b612a68565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612a6757612a668282612dd5565b5b5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612b3284610d11565b612b3c9190614269565b9050600060096000848152602001908152602001600020549050818114612c21576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816009600083815260200190815260200160002081905550505b6009600084815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600a80549050612ca69190614269565b90506000600b60008481526020019081526020016000205490506000600a8381548110612cfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600a8381548110612d44577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555081600b600083815260200190815260200160002081905550600b600085815260200190815260200160002060009055600a805480612db9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000612de083610d11565b905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600084815260200190815260200160002081905550505050565b6000612e67612e628461416f565b61413e565b905082815260208101848484011115612e7f57600080fd5b612e8a84828561431b565b509392505050565b600081359050612ea1816144d6565b92915050565b600081359050612eb6816144ed565b92915050565b600081359050612ecb81614504565b92915050565b600081359050612ee08161451b565b92915050565b600081519050612ef58161451b565b92915050565b600082601f830112612f0c57600080fd5b8135612f1c848260208601612e54565b91505092915050565b600081359050612f3481614532565b92915050565b600060208284031215612f4c57600080fd5b6000612f5a84828501612e92565b91505092915050565b60008060408385031215612f7657600080fd5b6000612f8485828601612e92565b9250506020612f9585828601612e92565b9150509250929050565b600080600060608486031215612fb457600080fd5b6000612fc286828701612e92565b9350506020612fd386828701612e92565b9250506040612fe486828701612f25565b9150509250925092565b6000806000806080858703121561300457600080fd5b600061301287828801612e92565b945050602061302387828801612e92565b935050604061303487828801612f25565b925050606085013567ffffffffffffffff81111561305157600080fd5b61305d87828801612efb565b91505092959194509250565b6000806040838503121561307c57600080fd5b600061308a85828601612e92565b925050602061309b85828601612ea7565b9150509250929050565b600080604083850312156130b857600080fd5b60006130c685828601612e92565b92505060206130d785828601612f25565b9150509250929050565b6000602082840312156130f357600080fd5b600061310184828501612ebc565b91505092915050565b6000806040838503121561311d57600080fd5b600061312b85828601612ebc565b925050602061313c85828601612e92565b9150509250929050565b6000806040838503121561315957600080fd5b600061316785828601612ebc565b925050602061317885828601612f25565b9150509250929050565b60006020828403121561319457600080fd5b60006131a284828501612ed1565b91505092915050565b6000602082840312156131bd57600080fd5b60006131cb84828501612ee6565b91505092915050565b6000602082840312156131e657600080fd5b60006131f484828501612f25565b91505092915050565b6132068161429d565b82525050565b613215816142af565b82525050565b613224816142bb565b82525050565b60006132358261419f565b61323f81856141b5565b935061324f81856020860161432a565b613258816144c5565b840191505092915050565b600061326e826141aa565b61327881856141c6565b935061328881856020860161432a565b613291816144c5565b840191505092915050565b60006132a7826141aa565b6132b181856141d7565b93506132c181856020860161432a565b80840191505092915050565b60006132da6022836141c6565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613340602b836141c6565b91507f4552433732315061757361626c653a20746f6b656e207472616e73666572207760008301527f68696c65207061757365640000000000000000000000000000000000000000006020830152604082019050919050565b60006133a6602f836141c6565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b600061340c6014836141c6565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b600061344c602b836141c6565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006134b26032836141c6565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000613518601c836141c6565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000613558603e836141c6565b91507f4552433732315072657365744d696e7465725061757365724175746f49643a2060008301527f6d75737420686176652070617573657220726f6c6520746f20706175736500006020830152604082019050919050565b60006135be6024836141c6565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006136246019836141c6565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000613664602c836141c6565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006136ca6030836141c6565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b60006137306010836141c6565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006137706038836141c6565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b60006137d6602a836141c6565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061383c6029836141c6565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006138a26020836141c6565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006138e2602c836141c6565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006139486029836141c6565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006139ae602f836141c6565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613a146021836141c6565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a7a6031836141c6565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613ae0602c836141c6565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b6000613b46603d836141c6565b91507f4552433732315072657365744d696e7465725061757365724175746f49643a2060008301527f6d7573742068617665206d696e74657220726f6c6520746f206d696e740000006020830152604082019050919050565b6000613bac6030836141c6565b91507f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f766564000000000000000000000000000000006020830152604082019050919050565b6000613c126040836141c6565b91507f4552433732315072657365744d696e7465725061757365724175746f49643a2060008301527f6d75737420686176652070617573657220726f6c6520746f20756e70617573656020830152604082019050919050565b6000613c78602f836141c6565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b613cda81614311565b82525050565b6000613cec828561329c565b9150613cf8828461329c565b91508190509392505050565b6000602082019050613d1960008301846131fd565b92915050565b6000608082019050613d3460008301876131fd565b613d4160208301866131fd565b613d4e6040830185613cd1565b8181036060830152613d60818461322a565b905095945050505050565b6000602082019050613d80600083018461320c565b92915050565b6000602082019050613d9b600083018461321b565b92915050565b60006020820190508181036000830152613dbb8184613263565b905092915050565b60006020820190508181036000830152613ddc816132cd565b9050919050565b60006020820190508181036000830152613dfc81613333565b9050919050565b60006020820190508181036000830152613e1c81613399565b9050919050565b60006020820190508181036000830152613e3c816133ff565b9050919050565b60006020820190508181036000830152613e5c8161343f565b9050919050565b60006020820190508181036000830152613e7c816134a5565b9050919050565b60006020820190508181036000830152613e9c8161350b565b9050919050565b60006020820190508181036000830152613ebc8161354b565b9050919050565b60006020820190508181036000830152613edc816135b1565b9050919050565b60006020820190508181036000830152613efc81613617565b9050919050565b60006020820190508181036000830152613f1c81613657565b9050919050565b60006020820190508181036000830152613f3c816136bd565b9050919050565b60006020820190508181036000830152613f5c81613723565b9050919050565b60006020820190508181036000830152613f7c81613763565b9050919050565b60006020820190508181036000830152613f9c816137c9565b9050919050565b60006020820190508181036000830152613fbc8161382f565b9050919050565b60006020820190508181036000830152613fdc81613895565b9050919050565b60006020820190508181036000830152613ffc816138d5565b9050919050565b6000602082019050818103600083015261401c8161393b565b9050919050565b6000602082019050818103600083015261403c816139a1565b9050919050565b6000602082019050818103600083015261405c81613a07565b9050919050565b6000602082019050818103600083015261407c81613a6d565b9050919050565b6000602082019050818103600083015261409c81613ad3565b9050919050565b600060208201905081810360008301526140bc81613b39565b9050919050565b600060208201905081810360008301526140dc81613b9f565b9050919050565b600060208201905081810360008301526140fc81613c05565b9050919050565b6000602082019050818103600083015261411c81613c6b565b9050919050565b60006020820190506141386000830184613cd1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561416557614164614496565b5b8060405250919050565b600067ffffffffffffffff82111561418a57614189614496565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006141ed82614311565b91506141f883614311565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561422d5761422c614409565b5b828201905092915050565b600061424382614311565b915061424e83614311565b92508261425e5761425d614438565b5b828204905092915050565b600061427482614311565b915061427f83614311565b92508282101561429257614291614409565b5b828203905092915050565b60006142a8826142f1565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561434857808201518184015260208101905061432d565b83811115614357576000848401525b50505050565b6000600282049050600182168061437557607f821691505b6020821081141561438957614388614467565b5b50919050565b600061439a82614311565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156143cd576143cc614409565b5b600182019050919050565b60006143e382614311565b91506143ee83614311565b9250826143fe576143fd614438565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6144df8161429d565b81146144ea57600080fd5b50565b6144f6816142af565b811461450157600080fd5b50565b61450d816142bb565b811461451857600080fd5b50565b614524816142c5565b811461452f57600080fd5b50565b61453b81614311565b811461454657600080fd5b5056fea2646970667358221220480ef3e0867f672c51af43b2288132764320d3b28bc43c8f64d26ae5e869e96b64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063b88d4fde116100a2578063d539139311610071578063d5391393146105c9578063d547741f146105e7578063e63ab1e914610603578063e985e9c514610621576101f0565b8063b88d4fde1461052f578063c87b56dd1461054b578063ca15c8731461057b578063caa0f92a146105ab576101f0565b806391d14854116100de57806391d14854146104a757806395d89b41146104d7578063a217fddf146104f5578063a22cb46514610513576101f0565b80636a6278421461042157806370a082311461043d5780638456cb591461046d5780639010d07c14610477576101f0565b80632f745c591161018757806342966c681161015657806342966c68146103875780634f6ccce7146103a35780635c975abb146103d35780636352211e146103f1576101f0565b80632f745c591461031557806336568abe146103455780633f4ba83a1461036157806342842e0e1461036b576101f0565b806318160ddd116101c357806318160ddd1461028f57806323b872dd146102ad578063248a9ca3146102c95780632f2ff15d146102f9576101f0565b806301ffc9a7146101f557806306fdde0314610225578063081812fc14610243578063095ea7b314610273575b600080fd5b61020f600480360381019061020a9190613182565b610651565b60405161021c9190613d6b565b60405180910390f35b61022d610663565b60405161023a9190613da1565b60405180910390f35b61025d600480360381019061025891906131d4565b6106f5565b60405161026a9190613d04565b60405180910390f35b61028d600480360381019061028891906130a5565b61077a565b005b610297610892565b6040516102a49190614123565b60405180910390f35b6102c760048036038101906102c29190612f9f565b61089f565b005b6102e360048036038101906102de91906130e1565b6108ff565b6040516102f09190613d86565b60405180910390f35b610313600480360381019061030e919061310a565b61091e565b005b61032f600480360381019061032a91906130a5565b610952565b60405161033c9190614123565b60405180910390f35b61035f600480360381019061035a919061310a565b6109f7565b005b610369610a2b565b005b61038560048036038101906103809190612f9f565b610aa5565b005b6103a1600480360381019061039c91906131d4565b610ac5565b005b6103bd60048036038101906103b891906131d4565b610b21565b6040516103ca9190614123565b60405180910390f35b6103db610bb8565b6040516103e89190613d6b565b60405180910390f35b61040b600480360381019061040691906131d4565b610bcf565b6040516104189190613d04565b60405180910390f35b61043b60048036038101906104369190612f3a565b610c81565b005b61045760048036038101906104529190612f3a565b610d11565b6040516104649190614123565b60405180910390f35b610475610dc9565b005b610491600480360381019061048c9190613146565b610e43565b60405161049e9190613d04565b60405180910390f35b6104c160048036038101906104bc919061310a565b610e72565b6040516104ce9190613d6b565b60405180910390f35b6104df610edc565b6040516104ec9190613da1565b60405180910390f35b6104fd610f6e565b60405161050a9190613d86565b60405180910390f35b61052d60048036038101906105289190613069565b610f75565b005b61054960048036038101906105449190612fee565b6110f6565b005b610565600480360381019061056091906131d4565b611158565b6040516105729190613da1565b60405180910390f35b610595600480360381019061059091906130e1565b6111ff565b6040516105a29190614123565b60405180910390f35b6105b3611223565b6040516105c09190614123565b60405180910390f35b6105d1611234565b6040516105de9190613d86565b60405180910390f35b61060160048036038101906105fc919061310a565b611258565b005b61060b61128c565b6040516106189190613d86565b60405180910390f35b61063b60048036038101906106369190612f63565b6112b0565b6040516106489190613d6b565b60405180910390f35b600061065c82611382565b9050919050565b6060600280546106729061435d565b80601f016020809104026020016040519081016040528092919081815260200182805461069e9061435d565b80156106eb5780601f106106c0576101008083540402835291602001916106eb565b820191906000526020600020905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b6000610700826113fc565b61073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690613fe3565b60405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061078582610bcf565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ed90614043565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610815611468565b73ffffffffffffffffffffffffffffffffffffffff16148061084457506108438161083e611468565b6112b0565b5b610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a90613f63565b60405180910390fd5b61088d8383611470565b505050565b6000600a80549050905090565b6108b06108aa611468565b82611529565b6108ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e690614063565b60405180910390fd5b6108fa838383611607565b505050565b6000806000838152602001908152602001600020600101549050919050565b6109288282611863565b61094d816001600085815260200190815260200160002061135290919063ffffffff16565b505050565b600061095d83610d11565b821061099e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099590613e43565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b610a0182826118c9565b610a26816001600085815260200190815260200160002061194c90919063ffffffff16565b505050565b610a5c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a57611468565b610e72565b610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906140e3565b60405180910390fd5b610aa361197c565b565b610ac0838383604051806020016040528060008152506110f6565b505050565b610ad6610ad0611468565b82611529565b610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0c906140c3565b60405180910390fd5b610b1e81611a1e565b50565b6000610b2b610892565b8210610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390614083565b60405180910390fd5b600a8281548110610ba6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b6000600c60009054906101000a900460ff16905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f90613fa3565b60405180910390fd5b80915050919050565b610cb27f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610cad611468565b610e72565b610cf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce8906140a3565b60405180910390fd5b610d0481610cff600d611b2f565b611b3d565b610d0e600d611d0b565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7990613f83565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610dfa7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610df5611468565b610e72565b610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3090613ea3565b60405180910390fd5b610e41611d21565b565b6000610e6a8260016000868152602001908152602001600020611dc490919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060038054610eeb9061435d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f179061435d565b8015610f645780601f10610f3957610100808354040283529160200191610f64565b820191906000526020600020905b815481529060010190602001808311610f4757829003601f168201915b5050505050905090565b6000801b81565b610f7d611468565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe290613ee3565b60405180910390fd5b8060076000610ff8611468565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166110a5611468565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110ea9190613d6b565b60405180910390a35050565b611107611101611468565b83611529565b611146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113d90614063565b60405180910390fd5b61115284848484611dde565b50505050565b6060611163826113fc565b6111a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119990614023565b60405180910390fd5b60006111ac611e3a565b905060008151116111cc57604051806020016040528060008152506111f7565b806111d684611ecc565b6040516020016111e7929190613ce0565b6040516020818303038152906040525b915050919050565b600061121c60016000848152602001908152602001600020612079565b9050919050565b600061122f600d611b2f565b905090565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611262828261208e565b611287816001600085815260200190815260200160002061194c90919063ffffffff16565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61134e82826120f4565b5050565b600061137a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6121d4565b905092915050565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806113f557506113f482612244565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166114e383610bcf565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611534826113fc565b611573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156a90613f03565b60405180910390fd5b600061157e83610bcf565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115ed57508373ffffffffffffffffffffffffffffffffffffffff166115d5846106f5565b73ffffffffffffffffffffffffffffffffffffffff16145b806115fe57506115fd81856112b0565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661162782610bcf565b73ffffffffffffffffffffffffffffffffffffffff161461167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167490614003565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e490613ec3565b60405180910390fd5b6116f8838383612326565b611703600082611470565b6001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117539190614269565b925050819055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117aa91906141e2565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61187c61186f836108ff565b611877611468565b610e72565b6118bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b290613e03565b60405180910390fd5b6118c582826120f4565b5050565b6118d1611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193590614103565b60405180910390fd5b6119488282612336565b5050565b6000611974836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612417565b905092915050565b611984610bb8565b6119c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ba90613e23565b60405180910390fd5b6000600c60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611a07611468565b604051611a149190613d04565b60405180910390a1565b6000611a2982610bcf565b9050611a3781600084612326565b611a42600083611470565b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a929190614269565b925050819055506004600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ba490613fc3565b60405180910390fd5b611bb6816113fc565b15611bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bed90613e83565b60405180910390fd5b611c0260008383612326565b6001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611c5291906141e2565b92505081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6001816000016000828254019250508190555050565b611d29610bb8565b15611d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6090613f43565b60405180910390fd5b6001600c60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611dad611468565b604051611dba9190613d04565b60405180910390a1565b6000611dd38360000183612595565b60001c905092915050565b611de9848484611607565b611df58484848461262f565b611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b90613e63565b60405180910390fd5b50505050565b6060600e8054611e499061435d565b80601f0160208091040260200160405190810160405280929190818152602001828054611e759061435d565b8015611ec25780601f10611e9757610100808354040283529160200191611ec2565b820191906000526020600020905b815481529060010190602001808311611ea557829003601f168201915b5050505050905090565b60606000821415611f14576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612074565b600082905060005b60008214611f46578080611f2f9061438f565b915050600a82611f3f9190614238565b9150611f1c565b60008167ffffffffffffffff811115611f88577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611fba5781602001600182028036833780820191505090505b5090505b6000851461206d57600182611fd39190614269565b9150600a85611fe291906143d8565b6030611fee91906141e2565b60f81b81838151811061202a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856120669190614238565b9450611fbe565b8093505050505b919050565b6000612087826000016127c6565b9050919050565b6120a761209a836108ff565b6120a2611468565b610e72565b6120e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120dd90613f23565b60405180910390fd5b6120f08282612336565b5050565b6120fe8282610e72565b6121d057600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612175611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006121e083836127d7565b61223957826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061223e565b600090505b92915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061230f57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061231f575061231e826127fa565b5b9050919050565b612331838383612874565b505050565b6123408282610e72565b1561241357600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506123b8611468565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080836001016000848152602001908152602001600020549050600081146125895760006001826124499190614269565b90506000600186600001805490506124619190614269565b905060008660000182815481106124a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050808760000184815481106124eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555083876001016000838152602001908152602001600020819055508660000180548061254d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061258f565b60009150505b92915050565b6000818360000180549050116125e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125d790613dc3565b60405180910390fd5b82600001828154811061261c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60006126508473ffffffffffffffffffffffffffffffffffffffff166128cc565b156127b9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612679611468565b8786866040518563ffffffff1660e01b815260040161269b9493929190613d1f565b602060405180830381600087803b1580156126b557600080fd5b505af19250505080156126e657506040513d601f19601f820116820180604052508101906126e391906131ab565b60015b612769573d8060008114612716576040519150601f19603f3d011682016040523d82523d6000602084013e61271b565b606091505b50600081511415612761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161275890613e63565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506127be565b600190505b949350505050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061286d575061286c826128df565b5b9050919050565b61287f838383612959565b612887610bb8565b156128c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128be90613de3565b60405180910390fd5b505050565b600080823b905060008111915050919050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612952575061295182612a6d565b5b9050919050565b612964838383612ad7565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156129a7576129a281612adc565b6129e6565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146129e5576129e48382612b25565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612a2957612a2481612c92565b612a68565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612a6757612a668282612dd5565b5b5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b505050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001612b3284610d11565b612b3c9190614269565b9050600060096000848152602001908152602001600020549050818114612c21576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816009600083815260200190815260200160002081905550505b6009600084815260200190815260200160002060009055600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b60006001600a80549050612ca69190614269565b90506000600b60008481526020019081526020016000205490506000600a8381548110612cfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600a8381548110612d44577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555081600b600083815260200190815260200160002081905550600b600085815260200190815260200160002060009055600a805480612db9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000612de083610d11565b905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806009600084815260200190815260200160002081905550505050565b6000612e67612e628461416f565b61413e565b905082815260208101848484011115612e7f57600080fd5b612e8a84828561431b565b509392505050565b600081359050612ea1816144d6565b92915050565b600081359050612eb6816144ed565b92915050565b600081359050612ecb81614504565b92915050565b600081359050612ee08161451b565b92915050565b600081519050612ef58161451b565b92915050565b600082601f830112612f0c57600080fd5b8135612f1c848260208601612e54565b91505092915050565b600081359050612f3481614532565b92915050565b600060208284031215612f4c57600080fd5b6000612f5a84828501612e92565b91505092915050565b60008060408385031215612f7657600080fd5b6000612f8485828601612e92565b9250506020612f9585828601612e92565b9150509250929050565b600080600060608486031215612fb457600080fd5b6000612fc286828701612e92565b9350506020612fd386828701612e92565b9250506040612fe486828701612f25565b9150509250925092565b6000806000806080858703121561300457600080fd5b600061301287828801612e92565b945050602061302387828801612e92565b935050604061303487828801612f25565b925050606085013567ffffffffffffffff81111561305157600080fd5b61305d87828801612efb565b91505092959194509250565b6000806040838503121561307c57600080fd5b600061308a85828601612e92565b925050602061309b85828601612ea7565b9150509250929050565b600080604083850312156130b857600080fd5b60006130c685828601612e92565b92505060206130d785828601612f25565b9150509250929050565b6000602082840312156130f357600080fd5b600061310184828501612ebc565b91505092915050565b6000806040838503121561311d57600080fd5b600061312b85828601612ebc565b925050602061313c85828601612e92565b9150509250929050565b6000806040838503121561315957600080fd5b600061316785828601612ebc565b925050602061317885828601612f25565b9150509250929050565b60006020828403121561319457600080fd5b60006131a284828501612ed1565b91505092915050565b6000602082840312156131bd57600080fd5b60006131cb84828501612ee6565b91505092915050565b6000602082840312156131e657600080fd5b60006131f484828501612f25565b91505092915050565b6132068161429d565b82525050565b613215816142af565b82525050565b613224816142bb565b82525050565b60006132358261419f565b61323f81856141b5565b935061324f81856020860161432a565b613258816144c5565b840191505092915050565b600061326e826141aa565b61327881856141c6565b935061328881856020860161432a565b613291816144c5565b840191505092915050565b60006132a7826141aa565b6132b181856141d7565b93506132c181856020860161432a565b80840191505092915050565b60006132da6022836141c6565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613340602b836141c6565b91507f4552433732315061757361626c653a20746f6b656e207472616e73666572207760008301527f68696c65207061757365640000000000000000000000000000000000000000006020830152604082019050919050565b60006133a6602f836141c6565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b600061340c6014836141c6565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b600061344c602b836141c6565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006134b26032836141c6565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000613518601c836141c6565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000613558603e836141c6565b91507f4552433732315072657365744d696e7465725061757365724175746f49643a2060008301527f6d75737420686176652070617573657220726f6c6520746f20706175736500006020830152604082019050919050565b60006135be6024836141c6565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006136246019836141c6565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000613664602c836141c6565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006136ca6030836141c6565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b60006137306010836141c6565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006137706038836141c6565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b60006137d6602a836141c6565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061383c6029836141c6565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006138a26020836141c6565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b60006138e2602c836141c6565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006139486029836141c6565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006139ae602f836141c6565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613a146021836141c6565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a7a6031836141c6565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613ae0602c836141c6565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b6000613b46603d836141c6565b91507f4552433732315072657365744d696e7465725061757365724175746f49643a2060008301527f6d7573742068617665206d696e74657220726f6c6520746f206d696e740000006020830152604082019050919050565b6000613bac6030836141c6565b91507f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f766564000000000000000000000000000000006020830152604082019050919050565b6000613c126040836141c6565b91507f4552433732315072657365744d696e7465725061757365724175746f49643a2060008301527f6d75737420686176652070617573657220726f6c6520746f20756e70617573656020830152604082019050919050565b6000613c78602f836141c6565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b613cda81614311565b82525050565b6000613cec828561329c565b9150613cf8828461329c565b91508190509392505050565b6000602082019050613d1960008301846131fd565b92915050565b6000608082019050613d3460008301876131fd565b613d4160208301866131fd565b613d4e6040830185613cd1565b8181036060830152613d60818461322a565b905095945050505050565b6000602082019050613d80600083018461320c565b92915050565b6000602082019050613d9b600083018461321b565b92915050565b60006020820190508181036000830152613dbb8184613263565b905092915050565b60006020820190508181036000830152613ddc816132cd565b9050919050565b60006020820190508181036000830152613dfc81613333565b9050919050565b60006020820190508181036000830152613e1c81613399565b9050919050565b60006020820190508181036000830152613e3c816133ff565b9050919050565b60006020820190508181036000830152613e5c8161343f565b9050919050565b60006020820190508181036000830152613e7c816134a5565b9050919050565b60006020820190508181036000830152613e9c8161350b565b9050919050565b60006020820190508181036000830152613ebc8161354b565b9050919050565b60006020820190508181036000830152613edc816135b1565b9050919050565b60006020820190508181036000830152613efc81613617565b9050919050565b60006020820190508181036000830152613f1c81613657565b9050919050565b60006020820190508181036000830152613f3c816136bd565b9050919050565b60006020820190508181036000830152613f5c81613723565b9050919050565b60006020820190508181036000830152613f7c81613763565b9050919050565b60006020820190508181036000830152613f9c816137c9565b9050919050565b60006020820190508181036000830152613fbc8161382f565b9050919050565b60006020820190508181036000830152613fdc81613895565b9050919050565b60006020820190508181036000830152613ffc816138d5565b9050919050565b6000602082019050818103600083015261401c8161393b565b9050919050565b6000602082019050818103600083015261403c816139a1565b9050919050565b6000602082019050818103600083015261405c81613a07565b9050919050565b6000602082019050818103600083015261407c81613a6d565b9050919050565b6000602082019050818103600083015261409c81613ad3565b9050919050565b600060208201905081810360008301526140bc81613b39565b9050919050565b600060208201905081810360008301526140dc81613b9f565b9050919050565b600060208201905081810360008301526140fc81613c05565b9050919050565b6000602082019050818103600083015261411c81613c6b565b9050919050565b60006020820190506141386000830184613cd1565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561416557614164614496565b5b8060405250919050565b600067ffffffffffffffff82111561418a57614189614496565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006141ed82614311565b91506141f883614311565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561422d5761422c614409565b5b828201905092915050565b600061424382614311565b915061424e83614311565b92508261425e5761425d614438565b5b828204905092915050565b600061427482614311565b915061427f83614311565b92508282101561429257614291614409565b5b828203905092915050565b60006142a8826142f1565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561434857808201518184015260208101905061432d565b83811115614357576000848401525b50505050565b6000600282049050600182168061437557607f821691505b6020821081141561438957614388614467565b5b50919050565b600061439a82614311565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156143cd576143cc614409565b5b600182019050919050565b60006143e382614311565b91506143ee83614311565b9250826143fe576143fd614438565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6144df8161429d565b81146144ea57600080fd5b50565b6144f6816142af565b811461450157600080fd5b50565b61450d816142bb565b811461451857600080fd5b50565b614524816142c5565b811461452f57600080fd5b50565b61453b81614311565b811461454657600080fd5b5056fea2646970667358221220480ef3e0867f672c51af43b2288132764320d3b28bc43c8f64d26ae5e869e96b64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "976:3367:111:-:0;;;1621:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1710:4;1716:6;1439:5:102;1431;:13;;;;;;;;;;;;:::i;:::-;;1465:7;1455;:17;;;;;;;;;;;;:::i;:::-;;1363:117;;967:5:77;957:7;;:15;;;;;;;;;;;;;;;;;;1751:12:111::1;1735:13;:28;;;;;;;;;;;;:::i;:::-;;1776:44;2472:4:0;1787:18:111::0;::::1;1807:12;:10;;;:12;;:::i;:::-;1776:10;;;:44;;:::i;:::-;1833:37;1171:24;1857:12;:10;;;:12;;:::i;:::-;1833:10;;;:37;;:::i;:::-;1881;1240:24;1905:12;:10;;;:12;;:::i;:::-;1881:10;;;:37;;:::i;:::-;1621:305:::0;;;976:3367;;601:98:120;654:7;681:10;674:17;;601:98;:::o;3004:169:1:-;3092:31;3109:4;3115:7;3092:16;;;;;:31;;:::i;:::-;3134;3157:7;3134:12;:18;3147:4;3134:18;;;;;;;;;;;:22;;;;;;:31;;;;:::i;:::-;;3004:169;;:::o;6704:112:0:-;6783:25;6794:4;6800:7;6783:10;;;:25;;:::i;:::-;6704:112;;:::o;6630:152:142:-;6700:4;6724:50;6729:3;:10;;6765:5;6749:23;;6741:32;;6724:4;;;:50;;:::i;:::-;6717:57;;6630:152;;;;:::o;7151:229:0:-;7226:22;7234:4;7240:7;7226;;;:22;;:::i;:::-;7221:152;;7297:4;7265:6;:12;7272:4;7265:12;;;;;;;;;;;:20;;:29;7286:7;7265:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7348:12;:10;;;:12;;:::i;:::-;7321:40;;7339:7;7321:40;;7333:4;7321:40;;;;;;;;;;7221:152;7151:229;;:::o;1685:414:142:-;1748:4;1770:21;1780:3;1785:5;1770:9;;;:21;;:::i;:::-;1765:327;;1808:3;:11;;1825:5;1808:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:3;:11;;:18;;;;1969:3;:12;;:19;1982:5;1969:19;;;;;;;;;;;:40;;;;2031:4;2024:11;;;;1765:327;2075:5;2068:12;;1685:414;;;;;:::o;3971:139:0:-;4049:4;4073:6;:12;4080:4;4073:12;;;;;;;;;;;:20;;:29;4094:7;4073:29;;;;;;;;;;;;;;;;;;;;;;;;;4066:36;;3971:139;;;;:::o;3914:129:142:-;3987:4;4034:1;4011:3;:12;;:19;4024:5;4011:19;;;;;;;;;;;;:24;;4004:31;;3914:129;;;;:::o;976:3367:111:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:143:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:914::-;;;;857:2;845:9;836:7;832:23;828:32;825:2;;;873:1;870;863:12;825:2;937:1;926:9;922:17;916:24;967:18;959:6;956:30;953:2;;;999:1;996;989:12;953:2;1027:74;1093:7;1084:6;1073:9;1069:22;1027:74;:::i;:::-;1017:84;;887:224;1171:2;1160:9;1156:18;1150:25;1202:18;1194:6;1191:30;1188:2;;;1234:1;1231;1224:12;1188:2;1262:74;1328:7;1319:6;1308:9;1304:22;1262:74;:::i;:::-;1252:84;;1121:225;1406:2;1395:9;1391:18;1385:25;1437:18;1429:6;1426:30;1423:2;;;1469:1;1466;1459:12;1423:2;1497:74;1563:7;1554:6;1543:9;1539:22;1497:74;:::i;:::-;1487:84;;1356:225;815:773;;;;;:::o;1594:283::-;;1660:2;1654:9;1644:19;;1702:4;1694:6;1690:17;1809:6;1797:10;1794:22;1773:18;1761:10;1758:34;1755:62;1752:2;;;1820:18;;:::i;:::-;1752:2;1860:10;1856:2;1849:22;1634:243;;;;:::o;1883:332::-;;2035:18;2027:6;2024:30;2021:2;;;2057:18;;:::i;:::-;2021:2;2142:4;2138:9;2131:4;2123:6;2119:17;2115:33;2107:41;;2203:4;2197;2193:15;2185:23;;1950:265;;;:::o;2221:307::-;2289:1;2299:113;2313:6;2310:1;2307:13;2299:113;;;2398:1;2393:3;2389:11;2383:18;2379:1;2374:3;2370:11;2363:39;2335:2;2332:1;2328:10;2323:15;;2299:113;;;2430:6;2427:1;2424:13;2421:2;;;2510:1;2501:6;2496:3;2492:16;2485:27;2421:2;2270:258;;;;:::o;2534:320::-;;2615:1;2609:4;2605:12;2595:22;;2662:1;2656:4;2652:12;2683:18;2673:2;;2739:4;2731:6;2727:17;2717:27;;2673:2;2801;2793:6;2790:14;2770:18;2767:38;2764:2;;;2820:18;;:::i;:::-;2764:2;2585:269;;;;:::o;2860:180::-;2908:77;2905:1;2898:88;3005:4;3002:1;2995:15;3029:4;3026:1;3019:15;3046:180;3094:77;3091:1;3084:88;3191:4;3188:1;3181:15;3215:4;3212:1;3205:15;976:3367:111;;;;;;;",
  "deployedSourceMap": "976:3367:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4136:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2484:100:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3944:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3481:397;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1591:113:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4834:305:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4299:123:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2214:165:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1259:256:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2737:174:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3666:185:111;;;:::i;:::-;;5210:151:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;470:245:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1781:233:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1080:86:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2178:239:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2436:407:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1908:208:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:179:111;;;:::i;:::-;;1669:145:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3971:139:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2653:104:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2427:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4237:295:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5432:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2828:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1988:134:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2946:107:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1133:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2472:170:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1202:62:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4603:164:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4136:204:111;4272:4;4296:36;4320:11;4296:23;:36::i;:::-;4289:43;;4136:204;;;:::o;2484:100:102:-;2538:13;2571:5;2564:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:100;:::o;3944:221::-;4020:7;4048:16;4056:7;4048;:16::i;:::-;4040:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4133:15;:24;4149:7;4133:24;;;;;;;;;;;;;;;;;;;;;4126:31;;3944:221;;;:::o;3481:397::-;3562:13;3578:23;3593:7;3578:14;:23::i;:::-;3562:39;;3626:5;3620:11;;:2;:11;;;;3612:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3706:5;3690:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3715:37;3732:5;3739:12;:10;:12::i;:::-;3715:16;:37::i;:::-;3690:62;3682:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;3849:21;3858:2;3862:7;3849:8;:21::i;:::-;3481:397;;;:::o;1591:113:106:-;1652:7;1679:10;:17;;;;1672:24;;1591:113;:::o;4834:305:102:-;4995:41;5014:12;:10;:12::i;:::-;5028:7;4995:18;:41::i;:::-;4987:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5103:28;5113:4;5119:2;5123:7;5103:9;:28::i;:::-;4834:305;;;:::o;4299:123:0:-;4365:7;4392:6;:12;4399:4;4392:12;;;;;;;;;;;:22;;;4385:29;;4299:123;;;:::o;2214:165:1:-;2299:30;2315:4;2321:7;2299:15;:30::i;:::-;2340:31;2363:7;2340:12;:18;2353:4;2340:18;;;;;;;;;;;:22;;:31;;;;:::i;:::-;;2214:165;;:::o;1259:256:106:-;1356:7;1392:23;1409:5;1392:16;:23::i;:::-;1384:5;:31;1376:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1481:12;:19;1494:5;1481:19;;;;;;;;;;;;;;;:26;1501:5;1481:26;;;;;;;;;;;;1474:33;;1259:256;;;;:::o;2737:174:1:-;2825:33;2844:4;2850:7;2825:18;:33::i;:::-;2869:34;2895:7;2869:12;:18;2882:4;2869:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2737:174;;:::o;3666:185:111:-;3719:34;1240:24;3740:12;:10;:12::i;:::-;3719:7;:34::i;:::-;3711:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3833:10;:8;:10::i;:::-;3666:185::o;5210:151:102:-;5314:39;5331:4;5337:2;5341:7;5314:39;;;;;;;;;;;;:16;:39::i;:::-;5210:151;;;:::o;470:245:105:-;588:41;607:12;:10;:12::i;:::-;621:7;588:18;:41::i;:::-;580:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;693:14;699:7;693:5;:14::i;:::-;470:245;:::o;1781:233:106:-;1856:7;1892:30;:28;:30::i;:::-;1884:5;:38;1876:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1989:10;2000:5;1989:17;;;;;;;;;;;;;;;;;;;;;;;;1982:24;;1781:233;;;:::o;1080:86:77:-;1127:4;1151:7;;;;;;;;;;;1144:14;;1080:86;:::o;2178:239:102:-;2250:7;2270:13;2286:7;:16;2294:7;2286:16;;;;;;;;;;;;;;;;;;;;;2270:32;;2338:1;2321:19;;:5;:19;;;;2313:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2404:5;2397:12;;;2178:239;;;:::o;2436:407:111:-;2496:34;1171:24;2517:12;:10;:12::i;:::-;2496:7;:34::i;:::-;2488:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;2761:36;2767:2;2771:25;:15;:23;:25::i;:::-;2761:5;:36::i;:::-;2808:27;:15;:25;:27::i;:::-;2436:407;:::o;1908:208:102:-;1980:7;2025:1;2008:19;;:5;:19;;;;2000:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2092:9;:16;2102:5;2092:16;;;;;;;;;;;;;;;;2085:23;;1908:208;;;:::o;3268:179:111:-;3319:34;1240:24;3340:12;:10;:12::i;:::-;3319:7;:34::i;:::-;3311:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3431:8;:6;:8::i;:::-;3268:179::o;1669:145:1:-;1751:7;1778:28;1800:5;1778:12;:18;1791:4;1778:18;;;;;;;;;;;:21;;:28;;;;:::i;:::-;1771:35;;1669:145;;;;:::o;3971:139:0:-;4049:4;4073:6;:12;4080:4;4073:12;;;;;;;;;;;:20;;:29;4094:7;4073:29;;;;;;;;;;;;;;;;;;;;;;;;;4066:36;;3971:139;;;;:::o;2653:104:102:-;2709:13;2742:7;2735:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2653:104;:::o;2427:49:0:-;2472:4;2427:49;;;:::o;4237:295:102:-;4352:12;:10;:12::i;:::-;4340:24;;:8;:24;;;;4332:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4452:8;4407:18;:32;4426:12;:10;:12::i;:::-;4407:32;;;;;;;;;;;;;;;:42;4440:8;4407:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4505:8;4476:48;;4491:12;:10;:12::i;:::-;4476:48;;;4515:8;4476:48;;;;;;:::i;:::-;;;;;;;;4237:295;;:::o;5432:285::-;5564:41;5583:12;:10;:12::i;:::-;5597:7;5564:18;:41::i;:::-;5556:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5670:39;5684:4;5690:2;5694:7;5703:5;5670:13;:39::i;:::-;5432:285;;;;:::o;2828:360::-;2901:13;2935:16;2943:7;2935;:16::i;:::-;2927:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3016:21;3040:10;:8;:10::i;:::-;3016:34;;3092:1;3074:7;3068:21;:25;:112;;;;;;;;;;;;;;;;;3133:7;3142:18;:7;:16;:18::i;:::-;3116:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3068:112;3061:119;;;2828:360;;;:::o;1988:134:1:-;2060:7;2087:27;:12;:18;2100:4;2087:18;;;;;;;;;;;:25;:27::i;:::-;2080:34;;1988:134;;;:::o;2946:107:111:-;2992:7;3020:25;:15;:23;:25::i;:::-;3013:32;;2946:107;:::o;1133:62::-;1171:24;1133:62;:::o;2472:170:1:-;2558:31;2575:4;2581:7;2558:16;:31::i;:::-;2600:34;2626:7;2600:12;:18;2613:4;2600:18;;;;;;;;;;;:25;;:34;;;;:::i;:::-;;2472:170;;:::o;1202:62:111:-;1240:24;1202:62;:::o;4603:164:102:-;4700:4;4724:18;:25;4743:5;4724:25;;;;;;;;;;;;;;;:35;4750:8;4724:35;;;;;;;;;;;;;;;;;;;;;;;;;4717:42;;4603:164;;;;:::o;6704:112:0:-;6783:25;6794:4;6800:7;6783:10;:25::i;:::-;6704:112;;:::o;6630:152:142:-;6700:4;6724:50;6729:3;:10;;6765:5;6749:23;;6741:32;;6724:4;:50::i;:::-;6717:57;;6630:152;;;;:::o;938:237:106:-;1040:4;1079:35;1064:50;;;:11;:50;;;;:103;;;;1131:36;1155:11;1131:23;:36::i;:::-;1064:103;1057:110;;938:237;;;:::o;7184:127:102:-;7249:4;7301:1;7273:30;;:7;:16;7281:7;7273:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7266:37;;7184:127;;;:::o;601:98:120:-;654:7;681:10;674:17;;601:98;:::o;11061:174:102:-;11163:2;11136:15;:24;11152:7;11136:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11219:7;11215:2;11181:46;;11190:23;11205:7;11190:14;:23::i;:::-;11181:46;;;;;;;;;;;;11061:174;;:::o;7478:348::-;7571:4;7596:16;7604:7;7596;:16::i;:::-;7588:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7672:13;7688:23;7703:7;7688:14;:23::i;:::-;7672:39;;7741:5;7730:16;;:7;:16;;;:51;;;;7774:7;7750:31;;:20;7762:7;7750:11;:20::i;:::-;:31;;;7730:51;:87;;;;7785:32;7802:5;7809:7;7785:16;:32::i;:::-;7730:87;7722:96;;;7478:348;;;;:::o;10399:544::-;10524:4;10497:31;;:23;10512:7;10497:14;:23::i;:::-;:31;;;10489:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10607:1;10593:16;;:2;:16;;;;10585:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10663:39;10684:4;10690:2;10694:7;10663:20;:39::i;:::-;10767:29;10784:1;10788:7;10767:8;:29::i;:::-;10828:1;10809:9;:15;10819:4;10809:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10857:1;10840:9;:13;10850:2;10840:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10888:2;10869:7;:16;10877:7;10869:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10927:7;10923:2;10908:27;;10917:4;10908:27;;;;;;;;;;;;10399:544;;;:::o;4684:232:0:-;4777:41;4785:18;4798:4;4785:12;:18::i;:::-;4805:12;:10;:12::i;:::-;4777:7;:41::i;:::-;4769:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;4883:25;4894:4;4900:7;4883:10;:25::i;:::-;4684:232;;:::o;5903:218::-;6010:12;:10;:12::i;:::-;5999:23;;:7;:23;;;5991:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6087:26;6099:4;6105:7;6087:11;:26::i;:::-;5903:218;;:::o;6958:158:142:-;7031:4;7055:53;7063:3;:10;;7099:5;7083:23;;7075:32;;7055:7;:53::i;:::-;7048:60;;6958:158;;;;:::o;2139:120:77:-;1683:8;:6;:8::i;:::-;1675:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:5:::1;2198:7;;:15;;;;;;;;;;;;;;;;;;2229:22;2238:12;:10;:12::i;:::-;2229:22;;;;;;:::i;:::-;;;;;;;;2139:120::o:0;9702:360:102:-;9762:13;9778:23;9793:7;9778:14;:23::i;:::-;9762:39;;9814:48;9835:5;9850:1;9854:7;9814:20;:48::i;:::-;9903:29;9920:1;9924:7;9903:8;:29::i;:::-;9965:1;9945:9;:16;9955:5;9945:16;;;;;;;;;;;;;;;;:21;;;;;;;:::i;:::-;;;;;;;;9984:7;:16;9992:7;9984:16;;;;;;;;;;;;9977:23;;;;;;;;;;;10046:7;10042:1;10018:36;;10027:5;10018:36;;;;;;;;;;;;9702:360;;:::o;793:114:121:-;858:7;885;:14;;;878:21;;793:114;;;:::o;9091:382:102:-;9185:1;9171:16;;:2;:16;;;;9163:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9244:16;9252:7;9244;:16::i;:::-;9243:17;9235:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9306:45;9335:1;9339:2;9343:7;9306:20;:45::i;:::-;9381:1;9364:9;:13;9374:2;9364:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9412:2;9393:7;:16;9401:7;9393:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9457:7;9453:2;9432:33;;9449:1;9432:33;;;;;;;;;;;;9091:382;;:::o;915:127:121:-;1022:1;1004:7;:14;;;:19;;;;;;;;;;;915:127;:::o;1880:118:77:-;1406:8;:6;:8::i;:::-;1405:9;1397:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1950:4:::1;1940:7;;:14;;;;;;;;;;;;;;;;;;1970:20;1977:12;:10;:12::i;:::-;1970:20;;;;;;:::i;:::-;;;;;;;;1880:118::o:0;7916:158:142:-;7990:7;8041:22;8045:3;:10;;8057:5;8041:3;:22::i;:::-;8033:31;;8010:56;;7916:158;;;;:::o;6599:272:102:-;6713:28;6723:4;6729:2;6733:7;6713:9;:28::i;:::-;6760:48;6783:4;6789:2;6793:7;6802:5;6760:22;:48::i;:::-;6752:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6599:272;;;;:::o;1934:114:111:-;1994:13;2027;2020:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:114;:::o;284:723:123:-;340:13;570:1;561:5;:10;557:53;;;588:10;;;;;;;;;;;;;;;;;;;;;557:53;620:12;635:5;620:20;;651:14;676:78;691:1;683:4;:9;676:78;;709:8;;;;;:::i;:::-;;;;740:2;732:10;;;;;:::i;:::-;;;676:78;;;764:19;796:6;786:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:39;;814:154;830:1;821:5;:10;814:154;;858:1;848:11;;;;;:::i;:::-;;;925:2;917:5;:10;;;;:::i;:::-;904:2;:24;;;;:::i;:::-;891:39;;874:6;881;874:14;;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;954:2;945:11;;;;;:::i;:::-;;;814:154;;;992:6;978:21;;;;;284:723;;;;:::o;7455:117:142:-;7518:7;7545:19;7553:3;:10;;7545:7;:19::i;:::-;7538:26;;7455:117;;;:::o;5161:235:0:-;5255:41;5263:18;5276:4;5263:12;:18::i;:::-;5283:12;:10;:12::i;:::-;5255:7;:41::i;:::-;5247:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;5362:26;5374:4;5380:7;5362:11;:26::i;:::-;5161:235;;:::o;7151:229::-;7226:22;7234:4;7240:7;7226;:22::i;:::-;7221:152;;7297:4;7265:6;:12;7272:4;7265:12;;;;;;;;;;;:20;;:29;7286:7;7265:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7348:12;:10;:12::i;:::-;7321:40;;7339:7;7321:40;;7333:4;7321:40;;;;;;;;;;7221:152;7151:229;;:::o;1685:414:142:-;1748:4;1770:21;1780:3;1785:5;1770:9;:21::i;:::-;1765:327;;1808:3;:11;;1825:5;1808:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:3;:11;;:18;;;;1969:3;:12;;:19;1982:5;1969:19;;;;;;;;;;;:40;;;;2031:4;2024:11;;;;1765:327;2075:5;2068:12;;1685:414;;;;;:::o;1552:292:102:-;1654:4;1693:25;1678:40;;;:11;:40;;;;:105;;;;1750:33;1735:48;;;:11;:48;;;;1678:105;:158;;;;1800:36;1824:11;1800:23;:36::i;:::-;1678:158;1671:165;;1552:292;;;:::o;3859:205:111:-;4011:45;4038:4;4044:2;4048:7;4011:26;:45::i;:::-;3859:205;;;:::o;7388:230:0:-;7463:22;7471:4;7477:7;7463;:22::i;:::-;7459:152;;;7534:5;7502:6;:12;7509:4;7502:12;;;;;;;;;;;:20;;:29;7523:7;7502:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7586:12;:10;:12::i;:::-;7559:40;;7577:7;7559:40;;7571:4;7559:40;;;;;;;;;;7459:152;7388:230;;:::o;2275:1553:142:-;2341:4;2459:18;2480:3;:12;;:19;2493:5;2480:19;;;;;;;;;;;;2459:40;;2530:1;2516:10;:15;2512:1309;;2878:21;2915:1;2902:10;:14;;;;:::i;:::-;2878:38;;2931:17;2972:1;2951:3;:11;;:18;;;;:22;;;;:::i;:::-;2931:42;;3218:17;3238:3;:11;;3250:9;3238:22;;;;;;;;;;;;;;;;;;;;;;;;3218:42;;3384:9;3355:3;:11;;3367:13;3355:26;;;;;;;;;;;;;;;;;;;;;;;:38;;;;3487:10;3461:3;:12;;:23;3474:9;3461:23;;;;;;;;;;;:36;;;;3622:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3717:3;:12;;:19;3730:5;3717:19;;;;;;;;;;;3710:26;;;3760:4;3753:11;;;;;;;;2512:1309;3804:5;3797:12;;;2275:1553;;;;;:::o;4582:204::-;4649:7;4698:5;4677:3;:11;;:18;;;;:26;4669:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4760:3;:11;;4772:5;4760:18;;;;;;;;;;;;;;;;;;;;;;;;4753:25;;4582:204;;;;:::o;11800:843:102:-;11921:4;11947:15;:2;:13;;;:15::i;:::-;11943:693;;;11999:2;11983:36;;;12020:12;:10;:12::i;:::-;12034:4;12040:7;12049:5;11983:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11979:602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12246:1;12229:6;:13;:18;12225:341;;;12272:60;;;;;;;;;;:::i;:::-;;;;;;;;12225:341;12516:6;12510:13;12501:6;12497:2;12493:15;12486:38;11979:602;12116:45;;;12106:55;;;:6;:55;;;;12099:62;;;;;11943:693;12620:4;12613:11;;11800:843;;;;;;;:::o;4129:109:142:-;4185:7;4212:3;:11;;:18;;;;4205:25;;4129:109;;;:::o;3914:129::-;3987:4;4034:1;4011:3;:12;;:19;4024:5;4011:19;;;;;;;;;;;;:24;;4004:31;;3914:129;;;;:::o;843:227:1:-;928:4;967:42;952:57;;;:11;:57;;;;:110;;;;1026:36;1050:11;1026:23;:36::i;:::-;952:110;945:117;;843:227;;;:::o;616:241:107:-;726:45;753:4;759:2;763:7;726:26;:45::i;:::-;793:8;:6;:8::i;:::-;792:9;784:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;616:241;;;:::o;743:422:118:-;803:4;1011:12;1122:7;1110:20;1102:28;;1156:1;1149:4;:8;1142:15;;;743:422;;;:::o;3662:217:0:-;3747:4;3786:32;3771:47;;;:11;:47;;;;:100;;;;3835:36;3859:11;3835:23;:36::i;:::-;3771:100;3764:107;;3662:217;;;:::o;2627:555:106:-;2737:45;2764:4;2770:2;2774:7;2737:26;:45::i;:::-;2815:1;2799:18;;:4;:18;;;2795:187;;;2834:40;2866:7;2834:31;:40::i;:::-;2795:187;;;2904:2;2896:10;;:4;:10;;;2892:90;;2923:47;2956:4;2962:7;2923:32;:47::i;:::-;2892:90;2795:187;3010:1;2996:16;;:2;:16;;;2992:183;;;3029:45;3066:7;3029:36;:45::i;:::-;2992:183;;;3102:4;3096:10;;:2;:10;;;3092:83;;3123:40;3151:2;3155:7;3123:27;:40::i;:::-;3092:83;2992:183;2627:555;;;:::o;787:157:130:-;872:4;911:25;896:40;;;:11;:40;;;;889:47;;787:157;;;:::o;13256:93:102:-;;;;:::o;3905:164:106:-;4009:10;:17;;;;3982:15;:24;3998:7;3982:24;;;;;;;;;;;:44;;;;4037:10;4053:7;4037:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3905:164;:::o;4696:988::-;4962:22;5012:1;4987:22;5004:4;4987:16;:22::i;:::-;:26;;;;:::i;:::-;4962:51;;5024:18;5045:17;:26;5063:7;5045:26;;;;;;;;;;;;5024:47;;5192:14;5178:10;:28;5174:328;;5223:19;5245:12;:18;5258:4;5245:18;;;;;;;;;;;;;;;:34;5264:14;5245:34;;;;;;;;;;;;5223:56;;5329:11;5296:12;:18;5309:4;5296:18;;;;;;;;;;;;;;;:30;5315:10;5296:30;;;;;;;;;;;:44;;;;5446:10;5413:17;:30;5431:11;5413:30;;;;;;;;;;;:43;;;;5174:328;;5598:17;:26;5616:7;5598:26;;;;;;;;;;;5591:33;;;5642:12;:18;5655:4;5642:18;;;;;;;;;;;;;;;:34;5661:14;5642:34;;;;;;;;;;;5635:41;;;4696:988;;;;:::o;5979:1079::-;6232:22;6277:1;6257:10;:17;;;;:21;;;;:::i;:::-;6232:46;;6289:18;6310:15;:24;6326:7;6310:24;;;;;;;;;;;;6289:45;;6661:19;6683:10;6694:14;6683:26;;;;;;;;;;;;;;;;;;;;;;;;6661:48;;6747:11;6722:10;6733;6722:22;;;;;;;;;;;;;;;;;;;;;;;:36;;;;6858:10;6827:15;:28;6843:11;6827:28;;;;;;;;;;;:41;;;;6999:15;:24;7015:7;6999:24;;;;;;;;;;;6992:31;;;7034:10;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5979:1079;;;;:::o;3483:221::-;3568:14;3585:20;3602:2;3585:16;:20::i;:::-;3568:37;;3643:7;3616:12;:16;3629:2;3616:16;;;;;;;;;;;;;;;:24;3633:6;3616:24;;;;;;;;;;;:34;;;;3690:6;3661:17;:26;3679:7;3661:26;;;;;;;;;;;:35;;;;3483:221;;;:::o;7:342:143:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:139::-;;439:6;426:20;417:29;;455:33;482:5;455:33;:::i;:::-;407:87;;;;:::o;500:133::-;;581:6;568:20;559:29;;597:30;621:5;597:30;:::i;:::-;549:84;;;;:::o;639:139::-;;723:6;710:20;701:29;;739:33;766:5;739:33;:::i;:::-;691:87;;;;:::o;784:137::-;;867:6;854:20;845:29;;883:32;909:5;883:32;:::i;:::-;835:86;;;;:::o;927:141::-;;1014:6;1008:13;999:22;;1030:32;1056:5;1030:32;:::i;:::-;989:79;;;;:::o;1087:271::-;;1191:3;1184:4;1176:6;1172:17;1168:27;1158:2;;1209:1;1206;1199:12;1158:2;1249:6;1236:20;1274:78;1348:3;1340:6;1333:4;1325:6;1321:17;1274:78;:::i;:::-;1265:87;;1148:210;;;;;:::o;1364:139::-;;1448:6;1435:20;1426:29;;1464:33;1491:5;1464:33;:::i;:::-;1416:87;;;;:::o;1509:262::-;;1617:2;1605:9;1596:7;1592:23;1588:32;1585:2;;;1633:1;1630;1623:12;1585:2;1676:1;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1647:117;1575:196;;;;:::o;1777:407::-;;;1902:2;1890:9;1881:7;1877:23;1873:32;1870:2;;;1918:1;1915;1908:12;1870:2;1961:1;1986:53;2031:7;2022:6;2011:9;2007:22;1986:53;:::i;:::-;1976:63;;1932:117;2088:2;2114:53;2159:7;2150:6;2139:9;2135:22;2114:53;:::i;:::-;2104:63;;2059:118;1860:324;;;;;:::o;2190:552::-;;;;2332:2;2320:9;2311:7;2307:23;2303:32;2300:2;;;2348:1;2345;2338:12;2300:2;2391:1;2416:53;2461:7;2452:6;2441:9;2437:22;2416:53;:::i;:::-;2406:63;;2362:117;2518:2;2544:53;2589:7;2580:6;2569:9;2565:22;2544:53;:::i;:::-;2534:63;;2489:118;2646:2;2672:53;2717:7;2708:6;2697:9;2693:22;2672:53;:::i;:::-;2662:63;;2617:118;2290:452;;;;;:::o;2748:809::-;;;;;2916:3;2904:9;2895:7;2891:23;2887:33;2884:2;;;2933:1;2930;2923:12;2884:2;2976:1;3001:53;3046:7;3037:6;3026:9;3022:22;3001:53;:::i;:::-;2991:63;;2947:117;3103:2;3129:53;3174:7;3165:6;3154:9;3150:22;3129:53;:::i;:::-;3119:63;;3074:118;3231:2;3257:53;3302:7;3293:6;3282:9;3278:22;3257:53;:::i;:::-;3247:63;;3202:118;3387:2;3376:9;3372:18;3359:32;3418:18;3410:6;3407:30;3404:2;;;3450:1;3447;3440:12;3404:2;3478:62;3532:7;3523:6;3512:9;3508:22;3478:62;:::i;:::-;3468:72;;3330:220;2874:683;;;;;;;:::o;3563:401::-;;;3685:2;3673:9;3664:7;3660:23;3656:32;3653:2;;;3701:1;3698;3691:12;3653:2;3744:1;3769:53;3814:7;3805:6;3794:9;3790:22;3769:53;:::i;:::-;3759:63;;3715:117;3871:2;3897:50;3939:7;3930:6;3919:9;3915:22;3897:50;:::i;:::-;3887:60;;3842:115;3643:321;;;;;:::o;3970:407::-;;;4095:2;4083:9;4074:7;4070:23;4066:32;4063:2;;;4111:1;4108;4101:12;4063:2;4154:1;4179:53;4224:7;4215:6;4204:9;4200:22;4179:53;:::i;:::-;4169:63;;4125:117;4281:2;4307:53;4352:7;4343:6;4332:9;4328:22;4307:53;:::i;:::-;4297:63;;4252:118;4053:324;;;;;:::o;4383:262::-;;4491:2;4479:9;4470:7;4466:23;4462:32;4459:2;;;4507:1;4504;4497:12;4459:2;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4449:196;;;;:::o;4651:407::-;;;4776:2;4764:9;4755:7;4751:23;4747:32;4744:2;;;4792:1;4789;4782:12;4744:2;4835:1;4860:53;4905:7;4896:6;4885:9;4881:22;4860:53;:::i;:::-;4850:63;;4806:117;4962:2;4988:53;5033:7;5024:6;5013:9;5009:22;4988:53;:::i;:::-;4978:63;;4933:118;4734:324;;;;;:::o;5064:407::-;;;5189:2;5177:9;5168:7;5164:23;5160:32;5157:2;;;5205:1;5202;5195:12;5157:2;5248:1;5273:53;5318:7;5309:6;5298:9;5294:22;5273:53;:::i;:::-;5263:63;;5219:117;5375:2;5401:53;5446:7;5437:6;5426:9;5422:22;5401:53;:::i;:::-;5391:63;;5346:118;5147:324;;;;;:::o;5477:260::-;;5584:2;5572:9;5563:7;5559:23;5555:32;5552:2;;;5600:1;5597;5590:12;5552:2;5643:1;5668:52;5712:7;5703:6;5692:9;5688:22;5668:52;:::i;:::-;5658:62;;5614:116;5542:195;;;;:::o;5743:282::-;;5861:2;5849:9;5840:7;5836:23;5832:32;5829:2;;;5877:1;5874;5867:12;5829:2;5920:1;5945:63;6000:7;5991:6;5980:9;5976:22;5945:63;:::i;:::-;5935:73;;5891:127;5819:206;;;;:::o;6031:262::-;;6139:2;6127:9;6118:7;6114:23;6110:32;6107:2;;;6155:1;6152;6145:12;6107:2;6198:1;6223:53;6268:7;6259:6;6248:9;6244:22;6223:53;:::i;:::-;6213:63;;6169:117;6097:196;;;;:::o;6299:118::-;6386:24;6404:5;6386:24;:::i;:::-;6381:3;6374:37;6364:53;;:::o;6423:109::-;6504:21;6519:5;6504:21;:::i;:::-;6499:3;6492:34;6482:50;;:::o;6538:118::-;6625:24;6643:5;6625:24;:::i;:::-;6620:3;6613:37;6603:53;;:::o;6662:360::-;;6776:38;6808:5;6776:38;:::i;:::-;6830:70;6893:6;6888:3;6830:70;:::i;:::-;6823:77;;6909:52;6954:6;6949:3;6942:4;6935:5;6931:16;6909:52;:::i;:::-;6986:29;7008:6;6986:29;:::i;:::-;6981:3;6977:39;6970:46;;6752:270;;;;;:::o;7028:364::-;;7144:39;7177:5;7144:39;:::i;:::-;7199:71;7263:6;7258:3;7199:71;:::i;:::-;7192:78;;7279:52;7324:6;7319:3;7312:4;7305:5;7301:16;7279:52;:::i;:::-;7356:29;7378:6;7356:29;:::i;:::-;7351:3;7347:39;7340:46;;7120:272;;;;;:::o;7398:377::-;;7532:39;7565:5;7532:39;:::i;:::-;7587:89;7669:6;7664:3;7587:89;:::i;:::-;7580:96;;7685:52;7730:6;7725:3;7718:4;7711:5;7707:16;7685:52;:::i;:::-;7762:6;7757:3;7753:16;7746:23;;7508:267;;;;;:::o;7781:366::-;;7944:67;8008:2;8003:3;7944:67;:::i;:::-;7937:74;;8041:34;8037:1;8032:3;8028:11;8021:55;8107:4;8102:2;8097:3;8093:12;8086:26;8138:2;8133:3;8129:12;8122:19;;7927:220;;;:::o;8153:375::-;;8316:67;8380:2;8375:3;8316:67;:::i;:::-;8309:74;;8413:34;8409:1;8404:3;8400:11;8393:55;8479:13;8474:2;8469:3;8465:12;8458:35;8519:2;8514:3;8510:12;8503:19;;8299:229;;;:::o;8534:379::-;;8697:67;8761:2;8756:3;8697:67;:::i;:::-;8690:74;;8794:34;8790:1;8785:3;8781:11;8774:55;8860:17;8855:2;8850:3;8846:12;8839:39;8904:2;8899:3;8895:12;8888:19;;8680:233;;;:::o;8919:318::-;;9082:67;9146:2;9141:3;9082:67;:::i;:::-;9075:74;;9179:22;9175:1;9170:3;9166:11;9159:43;9228:2;9223:3;9219:12;9212:19;;9065:172;;;:::o;9243:375::-;;9406:67;9470:2;9465:3;9406:67;:::i;:::-;9399:74;;9503:34;9499:1;9494:3;9490:11;9483:55;9569:13;9564:2;9559:3;9555:12;9548:35;9609:2;9604:3;9600:12;9593:19;;9389:229;;;:::o;9624:382::-;;9787:67;9851:2;9846:3;9787:67;:::i;:::-;9780:74;;9884:34;9880:1;9875:3;9871:11;9864:55;9950:20;9945:2;9940:3;9936:12;9929:42;9997:2;9992:3;9988:12;9981:19;;9770:236;;;:::o;10012:326::-;;10175:67;10239:2;10234:3;10175:67;:::i;:::-;10168:74;;10272:30;10268:1;10263:3;10259:11;10252:51;10329:2;10324:3;10320:12;10313:19;;10158:180;;;:::o;10344:394::-;;10507:67;10571:2;10566:3;10507:67;:::i;:::-;10500:74;;10604:34;10600:1;10595:3;10591:11;10584:55;10670:32;10665:2;10660:3;10656:12;10649:54;10729:2;10724:3;10720:12;10713:19;;10490:248;;;:::o;10744:368::-;;10907:67;10971:2;10966:3;10907:67;:::i;:::-;10900:74;;11004:34;11000:1;10995:3;10991:11;10984:55;11070:6;11065:2;11060:3;11056:12;11049:28;11103:2;11098:3;11094:12;11087:19;;10890:222;;;:::o;11118:323::-;;11281:67;11345:2;11340:3;11281:67;:::i;:::-;11274:74;;11378:27;11374:1;11369:3;11365:11;11358:48;11432:2;11427:3;11423:12;11416:19;;11264:177;;;:::o;11447:376::-;;11610:67;11674:2;11669:3;11610:67;:::i;:::-;11603:74;;11707:34;11703:1;11698:3;11694:11;11687:55;11773:14;11768:2;11763:3;11759:12;11752:36;11814:2;11809:3;11805:12;11798:19;;11593:230;;;:::o;11829:380::-;;11992:67;12056:2;12051:3;11992:67;:::i;:::-;11985:74;;12089:34;12085:1;12080:3;12076:11;12069:55;12155:18;12150:2;12145:3;12141:12;12134:40;12200:2;12195:3;12191:12;12184:19;;11975:234;;;:::o;12215:314::-;;12378:67;12442:2;12437:3;12378:67;:::i;:::-;12371:74;;12475:18;12471:1;12466:3;12462:11;12455:39;12520:2;12515:3;12511:12;12504:19;;12361:168;;;:::o;12535:388::-;;12698:67;12762:2;12757:3;12698:67;:::i;:::-;12691:74;;12795:34;12791:1;12786:3;12782:11;12775:55;12861:26;12856:2;12851:3;12847:12;12840:48;12914:2;12909:3;12905:12;12898:19;;12681:242;;;:::o;12929:374::-;;13092:67;13156:2;13151:3;13092:67;:::i;:::-;13085:74;;13189:34;13185:1;13180:3;13176:11;13169:55;13255:12;13250:2;13245:3;13241:12;13234:34;13294:2;13289:3;13285:12;13278:19;;13075:228;;;:::o;13309:373::-;;13472:67;13536:2;13531:3;13472:67;:::i;:::-;13465:74;;13569:34;13565:1;13560:3;13556:11;13549:55;13635:11;13630:2;13625:3;13621:12;13614:33;13673:2;13668:3;13664:12;13657:19;;13455:227;;;:::o;13688:330::-;;13851:67;13915:2;13910:3;13851:67;:::i;:::-;13844:74;;13948:34;13944:1;13939:3;13935:11;13928:55;14009:2;14004:3;14000:12;13993:19;;13834:184;;;:::o;14024:376::-;;14187:67;14251:2;14246:3;14187:67;:::i;:::-;14180:74;;14284:34;14280:1;14275:3;14271:11;14264:55;14350:14;14345:2;14340:3;14336:12;14329:36;14391:2;14386:3;14382:12;14375:19;;14170:230;;;:::o;14406:373::-;;14569:67;14633:2;14628:3;14569:67;:::i;:::-;14562:74;;14666:34;14662:1;14657:3;14653:11;14646:55;14732:11;14727:2;14722:3;14718:12;14711:33;14770:2;14765:3;14761:12;14754:19;;14552:227;;;:::o;14785:379::-;;14948:67;15012:2;15007:3;14948:67;:::i;:::-;14941:74;;15045:34;15041:1;15036:3;15032:11;15025:55;15111:17;15106:2;15101:3;15097:12;15090:39;15155:2;15150:3;15146:12;15139:19;;14931:233;;;:::o;15170:365::-;;15333:67;15397:2;15392:3;15333:67;:::i;:::-;15326:74;;15430:34;15426:1;15421:3;15417:11;15410:55;15496:3;15491:2;15486:3;15482:12;15475:25;15526:2;15521:3;15517:12;15510:19;;15316:219;;;:::o;15541:381::-;;15704:67;15768:2;15763:3;15704:67;:::i;:::-;15697:74;;15801:34;15797:1;15792:3;15788:11;15781:55;15867:19;15862:2;15857:3;15853:12;15846:41;15913:2;15908:3;15904:12;15897:19;;15687:235;;;:::o;15928:376::-;;16091:67;16155:2;16150:3;16091:67;:::i;:::-;16084:74;;16188:34;16184:1;16179:3;16175:11;16168:55;16254:14;16249:2;16244:3;16240:12;16233:36;16295:2;16290:3;16286:12;16279:19;;16074:230;;;:::o;16310:393::-;;16473:67;16537:2;16532:3;16473:67;:::i;:::-;16466:74;;16570:34;16566:1;16561:3;16557:11;16550:55;16636:31;16631:2;16626:3;16622:12;16615:53;16694:2;16689:3;16685:12;16678:19;;16456:247;;;:::o;16709:380::-;;16872:67;16936:2;16931:3;16872:67;:::i;:::-;16865:74;;16969:34;16965:1;16960:3;16956:11;16949:55;17035:18;17030:2;17025:3;17021:12;17014:40;17080:2;17075:3;17071:12;17064:19;;16855:234;;;:::o;17095:396::-;;17258:67;17322:2;17317:3;17258:67;:::i;:::-;17251:74;;17355:34;17351:1;17346:3;17342:11;17335:55;17421:34;17416:2;17411:3;17407:12;17400:56;17482:2;17477:3;17473:12;17466:19;;17241:250;;;:::o;17497:379::-;;17660:67;17724:2;17719:3;17660:67;:::i;:::-;17653:74;;17757:34;17753:1;17748:3;17744:11;17737:55;17823:17;17818:2;17813:3;17809:12;17802:39;17867:2;17862:3;17858:12;17851:19;;17643:233;;;:::o;17882:118::-;17969:24;17987:5;17969:24;:::i;:::-;17964:3;17957:37;17947:53;;:::o;18006:435::-;;18208:95;18299:3;18290:6;18208:95;:::i;:::-;18201:102;;18320:95;18411:3;18402:6;18320:95;:::i;:::-;18313:102;;18432:3;18425:10;;18190:251;;;;;:::o;18447:222::-;;18578:2;18567:9;18563:18;18555:26;;18591:71;18659:1;18648:9;18644:17;18635:6;18591:71;:::i;:::-;18545:124;;;;:::o;18675:640::-;;18908:3;18897:9;18893:19;18885:27;;18922:71;18990:1;18979:9;18975:17;18966:6;18922:71;:::i;:::-;19003:72;19071:2;19060:9;19056:18;19047:6;19003:72;:::i;:::-;19085;19153:2;19142:9;19138:18;19129:6;19085:72;:::i;:::-;19204:9;19198:4;19194:20;19189:2;19178:9;19174:18;19167:48;19232:76;19303:4;19294:6;19232:76;:::i;:::-;19224:84;;18875:440;;;;;;;:::o;19321:210::-;;19446:2;19435:9;19431:18;19423:26;;19459:65;19521:1;19510:9;19506:17;19497:6;19459:65;:::i;:::-;19413:118;;;;:::o;19537:222::-;;19668:2;19657:9;19653:18;19645:26;;19681:71;19749:1;19738:9;19734:17;19725:6;19681:71;:::i;:::-;19635:124;;;;:::o;19765:313::-;;19916:2;19905:9;19901:18;19893:26;;19965:9;19959:4;19955:20;19951:1;19940:9;19936:17;19929:47;19993:78;20066:4;20057:6;19993:78;:::i;:::-;19985:86;;19883:195;;;;:::o;20084:419::-;;20288:2;20277:9;20273:18;20265:26;;20337:9;20331:4;20327:20;20323:1;20312:9;20308:17;20301:47;20365:131;20491:4;20365:131;:::i;:::-;20357:139;;20255:248;;;:::o;20509:419::-;;20713:2;20702:9;20698:18;20690:26;;20762:9;20756:4;20752:20;20748:1;20737:9;20733:17;20726:47;20790:131;20916:4;20790:131;:::i;:::-;20782:139;;20680:248;;;:::o;20934:419::-;;21138:2;21127:9;21123:18;21115:26;;21187:9;21181:4;21177:20;21173:1;21162:9;21158:17;21151:47;21215:131;21341:4;21215:131;:::i;:::-;21207:139;;21105:248;;;:::o;21359:419::-;;21563:2;21552:9;21548:18;21540:26;;21612:9;21606:4;21602:20;21598:1;21587:9;21583:17;21576:47;21640:131;21766:4;21640:131;:::i;:::-;21632:139;;21530:248;;;:::o;21784:419::-;;21988:2;21977:9;21973:18;21965:26;;22037:9;22031:4;22027:20;22023:1;22012:9;22008:17;22001:47;22065:131;22191:4;22065:131;:::i;:::-;22057:139;;21955:248;;;:::o;22209:419::-;;22413:2;22402:9;22398:18;22390:26;;22462:9;22456:4;22452:20;22448:1;22437:9;22433:17;22426:47;22490:131;22616:4;22490:131;:::i;:::-;22482:139;;22380:248;;;:::o;22634:419::-;;22838:2;22827:9;22823:18;22815:26;;22887:9;22881:4;22877:20;22873:1;22862:9;22858:17;22851:47;22915:131;23041:4;22915:131;:::i;:::-;22907:139;;22805:248;;;:::o;23059:419::-;;23263:2;23252:9;23248:18;23240:26;;23312:9;23306:4;23302:20;23298:1;23287:9;23283:17;23276:47;23340:131;23466:4;23340:131;:::i;:::-;23332:139;;23230:248;;;:::o;23484:419::-;;23688:2;23677:9;23673:18;23665:26;;23737:9;23731:4;23727:20;23723:1;23712:9;23708:17;23701:47;23765:131;23891:4;23765:131;:::i;:::-;23757:139;;23655:248;;;:::o;23909:419::-;;24113:2;24102:9;24098:18;24090:26;;24162:9;24156:4;24152:20;24148:1;24137:9;24133:17;24126:47;24190:131;24316:4;24190:131;:::i;:::-;24182:139;;24080:248;;;:::o;24334:419::-;;24538:2;24527:9;24523:18;24515:26;;24587:9;24581:4;24577:20;24573:1;24562:9;24558:17;24551:47;24615:131;24741:4;24615:131;:::i;:::-;24607:139;;24505:248;;;:::o;24759:419::-;;24963:2;24952:9;24948:18;24940:26;;25012:9;25006:4;25002:20;24998:1;24987:9;24983:17;24976:47;25040:131;25166:4;25040:131;:::i;:::-;25032:139;;24930:248;;;:::o;25184:419::-;;25388:2;25377:9;25373:18;25365:26;;25437:9;25431:4;25427:20;25423:1;25412:9;25408:17;25401:47;25465:131;25591:4;25465:131;:::i;:::-;25457:139;;25355:248;;;:::o;25609:419::-;;25813:2;25802:9;25798:18;25790:26;;25862:9;25856:4;25852:20;25848:1;25837:9;25833:17;25826:47;25890:131;26016:4;25890:131;:::i;:::-;25882:139;;25780:248;;;:::o;26034:419::-;;26238:2;26227:9;26223:18;26215:26;;26287:9;26281:4;26277:20;26273:1;26262:9;26258:17;26251:47;26315:131;26441:4;26315:131;:::i;:::-;26307:139;;26205:248;;;:::o;26459:419::-;;26663:2;26652:9;26648:18;26640:26;;26712:9;26706:4;26702:20;26698:1;26687:9;26683:17;26676:47;26740:131;26866:4;26740:131;:::i;:::-;26732:139;;26630:248;;;:::o;26884:419::-;;27088:2;27077:9;27073:18;27065:26;;27137:9;27131:4;27127:20;27123:1;27112:9;27108:17;27101:47;27165:131;27291:4;27165:131;:::i;:::-;27157:139;;27055:248;;;:::o;27309:419::-;;27513:2;27502:9;27498:18;27490:26;;27562:9;27556:4;27552:20;27548:1;27537:9;27533:17;27526:47;27590:131;27716:4;27590:131;:::i;:::-;27582:139;;27480:248;;;:::o;27734:419::-;;27938:2;27927:9;27923:18;27915:26;;27987:9;27981:4;27977:20;27973:1;27962:9;27958:17;27951:47;28015:131;28141:4;28015:131;:::i;:::-;28007:139;;27905:248;;;:::o;28159:419::-;;28363:2;28352:9;28348:18;28340:26;;28412:9;28406:4;28402:20;28398:1;28387:9;28383:17;28376:47;28440:131;28566:4;28440:131;:::i;:::-;28432:139;;28330:248;;;:::o;28584:419::-;;28788:2;28777:9;28773:18;28765:26;;28837:9;28831:4;28827:20;28823:1;28812:9;28808:17;28801:47;28865:131;28991:4;28865:131;:::i;:::-;28857:139;;28755:248;;;:::o;29009:419::-;;29213:2;29202:9;29198:18;29190:26;;29262:9;29256:4;29252:20;29248:1;29237:9;29233:17;29226:47;29290:131;29416:4;29290:131;:::i;:::-;29282:139;;29180:248;;;:::o;29434:419::-;;29638:2;29627:9;29623:18;29615:26;;29687:9;29681:4;29677:20;29673:1;29662:9;29658:17;29651:47;29715:131;29841:4;29715:131;:::i;:::-;29707:139;;29605:248;;;:::o;29859:419::-;;30063:2;30052:9;30048:18;30040:26;;30112:9;30106:4;30102:20;30098:1;30087:9;30083:17;30076:47;30140:131;30266:4;30140:131;:::i;:::-;30132:139;;30030:248;;;:::o;30284:419::-;;30488:2;30477:9;30473:18;30465:26;;30537:9;30531:4;30527:20;30523:1;30512:9;30508:17;30501:47;30565:131;30691:4;30565:131;:::i;:::-;30557:139;;30455:248;;;:::o;30709:419::-;;30913:2;30902:9;30898:18;30890:26;;30962:9;30956:4;30952:20;30948:1;30937:9;30933:17;30926:47;30990:131;31116:4;30990:131;:::i;:::-;30982:139;;30880:248;;;:::o;31134:419::-;;31338:2;31327:9;31323:18;31315:26;;31387:9;31381:4;31377:20;31373:1;31362:9;31358:17;31351:47;31415:131;31541:4;31415:131;:::i;:::-;31407:139;;31305:248;;;:::o;31559:222::-;;31690:2;31679:9;31675:18;31667:26;;31703:71;31771:1;31760:9;31756:17;31747:6;31703:71;:::i;:::-;31657:124;;;;:::o;31787:283::-;;31853:2;31847:9;31837:19;;31895:4;31887:6;31883:17;32002:6;31990:10;31987:22;31966:18;31954:10;31951:34;31948:62;31945:2;;;32013:18;;:::i;:::-;31945:2;32053:10;32049:2;32042:22;31827:243;;;;:::o;32076:331::-;;32227:18;32219:6;32216:30;32213:2;;;32249:18;;:::i;:::-;32213:2;32334:4;32330:9;32323:4;32315:6;32311:17;32307:33;32299:41;;32395:4;32389;32385:15;32377:23;;32142:265;;;:::o;32413:98::-;;32498:5;32492:12;32482:22;;32471:40;;;:::o;32517:99::-;;32603:5;32597:12;32587:22;;32576:40;;;:::o;32622:168::-;;32739:6;32734:3;32727:19;32779:4;32774:3;32770:14;32755:29;;32717:73;;;;:::o;32796:169::-;;32914:6;32909:3;32902:19;32954:4;32949:3;32945:14;32930:29;;32892:73;;;;:::o;32971:148::-;;33110:3;33095:18;;33085:34;;;;:::o;33125:305::-;;33184:20;33202:1;33184:20;:::i;:::-;33179:25;;33218:20;33236:1;33218:20;:::i;:::-;33213:25;;33372:1;33304:66;33300:74;33297:1;33294:81;33291:2;;;33378:18;;:::i;:::-;33291:2;33422:1;33419;33415:9;33408:16;;33169:261;;;;:::o;33436:185::-;;33493:20;33511:1;33493:20;:::i;:::-;33488:25;;33527:20;33545:1;33527:20;:::i;:::-;33522:25;;33566:1;33556:2;;33571:18;;:::i;:::-;33556:2;33613:1;33610;33606:9;33601:14;;33478:143;;;;:::o;33627:191::-;;33687:20;33705:1;33687:20;:::i;:::-;33682:25;;33721:20;33739:1;33721:20;:::i;:::-;33716:25;;33760:1;33757;33754:8;33751:2;;;33765:18;;:::i;:::-;33751:2;33810:1;33807;33803:9;33795:17;;33672:146;;;;:::o;33824:96::-;;33890:24;33908:5;33890:24;:::i;:::-;33879:35;;33869:51;;;:::o;33926:90::-;;34003:5;33996:13;33989:21;33978:32;;33968:48;;;:::o;34022:77::-;;34088:5;34077:16;;34067:32;;;:::o;34105:149::-;;34181:66;34174:5;34170:78;34159:89;;34149:105;;;:::o;34260:126::-;;34337:42;34330:5;34326:54;34315:65;;34305:81;;;:::o;34392:77::-;;34458:5;34447:16;;34437:32;;;:::o;34475:154::-;34559:6;34554:3;34549;34536:30;34621:1;34612:6;34607:3;34603:16;34596:27;34526:103;;;:::o;34635:307::-;34703:1;34713:113;34727:6;34724:1;34721:13;34713:113;;;34812:1;34807:3;34803:11;34797:18;34793:1;34788:3;34784:11;34777:39;34749:2;34746:1;34742:10;34737:15;;34713:113;;;34844:6;34841:1;34838:13;34835:2;;;34924:1;34915:6;34910:3;34906:16;34899:27;34835:2;34684:258;;;;:::o;34948:320::-;;35029:1;35023:4;35019:12;35009:22;;35076:1;35070:4;35066:12;35097:18;35087:2;;35153:4;35145:6;35141:17;35131:27;;35087:2;35215;35207:6;35204:14;35184:18;35181:38;35178:2;;;35234:18;;:::i;:::-;35178:2;34999:269;;;;:::o;35274:233::-;;35336:24;35354:5;35336:24;:::i;:::-;35327:33;;35382:66;35375:5;35372:77;35369:2;;;35452:18;;:::i;:::-;35369:2;35499:1;35492:5;35488:13;35481:20;;35317:190;;;:::o;35513:176::-;;35562:20;35580:1;35562:20;:::i;:::-;35557:25;;35596:20;35614:1;35596:20;:::i;:::-;35591:25;;35635:1;35625:2;;35640:18;;:::i;:::-;35625:2;35681:1;35678;35674:9;35669:14;;35547:142;;;;:::o;35695:180::-;35743:77;35740:1;35733:88;35840:4;35837:1;35830:15;35864:4;35861:1;35854:15;35881:180;35929:77;35926:1;35919:88;36026:4;36023:1;36016:15;36050:4;36047:1;36040:15;36067:180;36115:77;36112:1;36105:88;36212:4;36209:1;36202:15;36236:4;36233:1;36226:15;36253:180;36301:77;36298:1;36291:88;36398:4;36395:1;36388:15;36422:4;36419:1;36412:15;36439:102;;36531:2;36527:7;36522:2;36515:5;36511:14;36507:28;36497:38;;36487:54;;;:::o;36547:122::-;36620:24;36638:5;36620:24;:::i;:::-;36613:5;36610:35;36600:2;;36659:1;36656;36649:12;36600:2;36590:79;:::o;36675:116::-;36745:21;36760:5;36745:21;:::i;:::-;36738:5;36735:32;36725:2;;36781:1;36778;36771:12;36725:2;36715:76;:::o;36797:122::-;36870:24;36888:5;36870:24;:::i;:::-;36863:5;36860:35;36850:2;;36909:1;36906;36899:12;36850:2;36840:79;:::o;36925:120::-;36997:23;37014:5;36997:23;:::i;:::-;36990:5;36987:34;36977:2;;37035:1;37032;37025:12;36977:2;36967:78;:::o;37051:122::-;37124:24;37142:5;37124:24;:::i;:::-;37117:5;37114:35;37104:2;;37163:1;37160;37153:12;37104:2;37094:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC721.sol\";\r\nimport \"../extensions/ERC721Enumerable.sol\";\r\nimport \"../extensions/ERC721Burnable.sol\";\r\nimport \"../extensions/ERC721Pausable.sol\";\r\nimport \"../../../access/AccessControlEnumerable.sol\";\r\nimport \"../../../utils/Context.sol\";\r\nimport \"../../../utils/Counters.sol\";\r\n\r\n/**\r\n * @dev {ERC721} token, including:\r\n *\r\n *  - ability for holders to burn (destroy) their tokens\r\n *  - a minter role that allows for token minting (creation)\r\n *  - a pauser role that allows to stop all token transfers\r\n *  - token ID and URI autogeneration\r\n *\r\n * This contract uses {AccessControl} to lock permissioned functions using the\r\n * different roles - head to its documentation for details.\r\n *\r\n * The account that deploys the contract will be granted the minter and pauser\r\n * roles, as well as the default admin role, which will let it grant both minter\r\n * and pauser roles to other accounts.\r\n */\r\ncontract GeoRewards is Context, AccessControlEnumerable, ERC721Enumerable, ERC721Burnable, ERC721Pausable {\r\n    using Counters for Counters.Counter;\r\n\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n\r\n    Counters.Counter private _tokenIdTracker;\r\n\r\n    string private _baseTokenURI;\r\n\r\n    /**\r\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\r\n     * account that deploys the contract.\r\n     *\r\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\r\n     * See {ERC721-tokenURI}.\r\n     */\r\n    constructor(string memory name, string memory symbol, string memory baseTokenURI) ERC721(name, symbol) {\r\n        _baseTokenURI = baseTokenURI;\r\n\r\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n\r\n        _setupRole(MINTER_ROLE, _msgSender());\r\n        _setupRole(PAUSER_ROLE, _msgSender());\r\n    }\r\n\r\n    function _baseURI() internal view virtual override returns (string memory) {\r\n        return _baseTokenURI;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a new token for `to`. Its token ID will be automatically\r\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\r\n     * URI autogenerated based on the base URI passed at construction.\r\n     *\r\n     * See {ERC721-_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `MINTER_ROLE`.\r\n     */\r\n    function mint(address to) public virtual {\r\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\r\n\r\n        // We cannot just use balanceOf to create the new tokenId because tokens\r\n        // can be burned (destroyed), so we need a separate counter.\r\n        _mint(to, _tokenIdTracker.current());\r\n        _tokenIdTracker.increment();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token id\r\n     *\r\n     * See {ERC721-_mint}.\r\n     */\r\n\r\n    function getNextTokenId() public view returns(uint256 ) {\r\n        return _tokenIdTracker.current();\r\n    }\r\n\r\n    /**\r\n     * @dev Pauses all token transfers.\r\n     *\r\n     * See {ERC721Pausable} and {Pausable-_pause}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `PAUSER_ROLE`.\r\n     */\r\n    function pause() public virtual {\r\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Unpauses all token transfers.\r\n     *\r\n     * See {ERC721Pausable} and {Pausable-_unpause}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `PAUSER_ROLE`.\r\n     */\r\n    function unpause() public virtual {\r\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\r\n        _unpause();\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721, ERC721Enumerable, ERC721Pausable) {\r\n        super._beforeTokenTransfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(AccessControlEnumerable, ERC721, ERC721Enumerable) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/presets/GeoRewards.sol",
  "ast": {
    "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/presets/GeoRewards.sol",
    "exportedSymbols": {
      "AccessControl": [
        322
      ],
      "AccessControlEnumerable": [
        512
      ],
      "Address": [
        14898
      ],
      "Context": [
        15006
      ],
      "Counters": [
        15067
      ],
      "ERC165": [
        16064
      ],
      "ERC721": [
        12282
      ],
      "ERC721Burnable": [
        12446
      ],
      "ERC721Enumerable": [
        12784
      ],
      "ERC721Pausable": [
        12821
      ],
      "EnumerableSet": [
        18249
      ],
      "GeoRewards": [
        13206
      ],
      "IAccessControl": [
        42
      ],
      "IAccessControlEnumerable": [
        344
      ],
      "IERC165": [
        16390
      ],
      "IERC721": [
        12398
      ],
      "IERC721Enumerable": [
        12980
      ],
      "IERC721Metadata": [
        13007
      ],
      "IERC721Receiver": [
        12416
      ],
      "Pausable": [
        7948
      ],
      "Strings": [
        15381
      ]
    },
    "id": 13207,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13009,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:111"
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "../ERC721.sol",
        "id": 13010,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12283,
        "src": "62:23:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "../extensions/ERC721Enumerable.sol",
        "id": 13011,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12785,
        "src": "87:44:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "../extensions/ERC721Burnable.sol",
        "id": 13012,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12447,
        "src": "133:42:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
        "file": "../extensions/ERC721Pausable.sol",
        "id": 13013,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12822,
        "src": "177:42:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 13014,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 513,
        "src": "221:53:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 13015,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 15007,
        "src": "276:36:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "../../../utils/Counters.sol",
        "id": 13016,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 15068,
        "src": "314:37:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13018,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15006,
              "src": "999:7:111"
            },
            "id": 13019,
            "nodeType": "InheritanceSpecifier",
            "src": "999:7:111"
          },
          {
            "baseName": {
              "id": 13020,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 512,
              "src": "1008:23:111"
            },
            "id": 13021,
            "nodeType": "InheritanceSpecifier",
            "src": "1008:23:111"
          },
          {
            "baseName": {
              "id": 13022,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12784,
              "src": "1033:16:111"
            },
            "id": 13023,
            "nodeType": "InheritanceSpecifier",
            "src": "1033:16:111"
          },
          {
            "baseName": {
              "id": 13024,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12446,
              "src": "1051:14:111"
            },
            "id": 13025,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:14:111"
          },
          {
            "baseName": {
              "id": 13026,
              "name": "ERC721Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12821,
              "src": "1067:14:111"
            },
            "id": 13027,
            "nodeType": "InheritanceSpecifier",
            "src": "1067:14:111"
          }
        ],
        "contractDependencies": [
          42,
          322,
          344,
          512,
          7948,
          12282,
          12398,
          12446,
          12784,
          12821,
          12980,
          13007,
          15006,
          16064,
          16390
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13017,
          "nodeType": "StructuredDocumentation",
          "src": "355:619:111",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 13206,
        "linearizedBaseContracts": [
          13206,
          12821,
          7948,
          12446,
          12784,
          12980,
          12282,
          13007,
          12398,
          512,
          322,
          16064,
          16390,
          42,
          15006,
          344
        ],
        "name": "GeoRewards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13031,
            "libraryName": {
              "id": 13028,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15067,
              "src": "1095:8:111"
            },
            "nodeType": "UsingForDirective",
            "src": "1089:36:111",
            "typeName": {
              "id": 13030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13029,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15012,
                "src": "1108:16:111"
              },
              "referencedDeclaration": 15012,
              "src": "1108:16:111",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$15012_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 13036,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1133:62:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13032,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1133:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 13034,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1181:13:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 13033,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1171:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13035,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1171:24:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 13041,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1202:62:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13037,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1202:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 13039,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1250:13:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 13038,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1240:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13040,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1240:24:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13044,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1273:40:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$15012_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 13043,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13042,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15012,
                "src": "1273:16:111"
              },
              "referencedDeclaration": 15012,
              "src": "1273:16:111",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$15012_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13046,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1322:28:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13045,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1322:6:111",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13082,
              "nodeType": "Block",
              "src": "1724:202:111",
              "statements": [
                {
                  "expression": {
                    "id": 13062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13060,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13046,
                      "src": "1735:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13061,
                      "name": "baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13053,
                      "src": "1751:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1735:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13063,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:28:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13065,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1787:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13066,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1807:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1807:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13064,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        511
                      ],
                      "referencedDeclaration": 511,
                      "src": "1776:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:44:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13069,
                  "nodeType": "ExpressionStatement",
                  "src": "1776:44:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13071,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13036,
                        "src": "1844:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13072,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1857:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1857:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13070,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        511
                      ],
                      "referencedDeclaration": 511,
                      "src": "1833:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1833:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13075,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:37:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13077,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13041,
                        "src": "1892:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13078,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1905:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13076,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        511
                      ],
                      "referencedDeclaration": 511,
                      "src": "1881:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13081,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:37:111"
                }
              ]
            },
            "documentation": {
              "id": 13047,
              "nodeType": "StructuredDocumentation",
              "src": "1359:256:111",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 13083,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13056,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13049,
                    "src": "1710:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 13057,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13051,
                    "src": "1716:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 13058,
                "modifierName": {
                  "id": 13055,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12282,
                  "src": "1703:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1703:20:111"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13049,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 13083,
                  "src": "1633:18:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13048,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13051,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 13083,
                  "src": "1653:20:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13053,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 13083,
                  "src": "1675:26:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13052,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1632:70:111"
            },
            "returnParameters": {
              "id": 13059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1724:0:111"
            },
            "scope": 13206,
            "src": "1621:305:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11681
            ],
            "body": {
              "id": 13091,
              "nodeType": "Block",
              "src": "2009:39:111",
              "statements": [
                {
                  "expression": {
                    "id": 13089,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13046,
                    "src": "2027:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13088,
                  "id": 13090,
                  "nodeType": "Return",
                  "src": "2020:20:111"
                }
              ]
            },
            "id": 13092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13085,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1976:8:111"
            },
            "parameters": {
              "id": 13084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1951:2:111"
            },
            "returnParameters": {
              "id": 13088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13087,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13092,
                  "src": "1994:13:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:15:111"
            },
            "scope": 13206,
            "src": "1934:114:111",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13119,
              "nodeType": "Block",
              "src": "2477:366:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13100,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13036,
                            "src": "2504:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13101,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14994,
                              "src": "2517:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2517:12:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13099,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "2496:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2496:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 13104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:63:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 13098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2488:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:108:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13106,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:108:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13108,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13095,
                        "src": "2767:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13109,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13044,
                            "src": "2771:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$15012_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 13110,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15024,
                          "src": "2771:23:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$15012_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$15012_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 13111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2771:25:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13107,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12062,
                      "src": "2761:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:36:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13114,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13044,
                        "src": "2808:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$15012_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 13116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15038,
                      "src": "2808:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$15012_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$15012_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 13117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2808:27:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13118,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:27:111"
                }
              ]
            },
            "documentation": {
              "id": 13093,
              "nodeType": "StructuredDocumentation",
              "src": "2056:374:111",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 13120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13095,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13120,
                  "src": "2450:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2449:12:111"
            },
            "returnParameters": {
              "id": 13097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2477:0:111"
            },
            "scope": 13206,
            "src": "2436:407:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13130,
              "nodeType": "Block",
              "src": "3002:51:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13126,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13044,
                        "src": "3020:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$15012_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 13127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15024,
                      "src": "3020:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$15012_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$15012_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 13128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3020:25:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13125,
                  "id": 13129,
                  "nodeType": "Return",
                  "src": "3013:32:111"
                }
              ]
            },
            "documentation": {
              "id": 13121,
              "nodeType": "StructuredDocumentation",
              "src": "2851:87:111",
              "text": " @dev Returns the next token id\n See {ERC721-_mint}."
            },
            "functionSelector": "caa0f92a",
            "id": 13131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2969:2:111"
            },
            "returnParameters": {
              "id": 13125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13124,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13131,
                  "src": "2992:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:10:111"
            },
            "scope": 13206,
            "src": "2946:107:111",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13147,
              "nodeType": "Block",
              "src": "3300:147:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13137,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13041,
                            "src": "3327:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13138,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14994,
                              "src": "3340:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3340:12:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13136,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "3319:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3319:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 13141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3355:64:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 13135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3311:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:109:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13143,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:109:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13144,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "3431:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3431:8:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13146,
                  "nodeType": "ExpressionStatement",
                  "src": "3431:8:111"
                }
              ]
            },
            "documentation": {
              "id": 13132,
              "nodeType": "StructuredDocumentation",
              "src": "3061:201:111",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 13148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3282:2:111"
            },
            "returnParameters": {
              "id": 13134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3300:0:111"
            },
            "scope": 13206,
            "src": "3268:179:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13164,
              "nodeType": "Block",
              "src": "3700:151:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13154,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13041,
                            "src": "3727:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13155,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14994,
                              "src": "3740:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3740:12:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13153,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "3719:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3719:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 13158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3755:66:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 13152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3711:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3711:111:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13160,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:111:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13161,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7947,
                      "src": "3833:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3833:10:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13163,
                  "nodeType": "ExpressionStatement",
                  "src": "3833:10:111"
                }
              ]
            },
            "documentation": {
              "id": 13149,
              "nodeType": "StructuredDocumentation",
              "src": "3455:205:111",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 13165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3682:2:111"
            },
            "returnParameters": {
              "id": 13151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3700:0:111"
            },
            "scope": 13206,
            "src": "3666:185:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12281,
              12622,
              12820
            ],
            "body": {
              "id": 13186,
              "nodeType": "Block",
              "src": "4000:64:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13181,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13167,
                        "src": "4038:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13182,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13169,
                        "src": "4044:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13183,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13171,
                        "src": "4048:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13178,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4011:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GeoRewards_$13206_$",
                          "typeString": "type(contract super GeoRewards)"
                        }
                      },
                      "id": 13180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12820,
                      "src": "4011:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:45:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13185,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:45:111"
                }
              ]
            },
            "id": 13187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13176,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13173,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12282,
                  "src": "3958:6:111"
                },
                {
                  "id": 13174,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12784,
                  "src": "3966:16:111"
                },
                {
                  "id": 13175,
                  "name": "ERC721Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12821,
                  "src": "3984:14:111"
                }
              ],
              "src": "3949:50:111"
            },
            "parameters": {
              "id": 13172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13167,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 13187,
                  "src": "3889:12:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13169,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13187,
                  "src": "3903:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13171,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13187,
                  "src": "3915:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3915:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3888:43:111"
            },
            "returnParameters": {
              "id": 13177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4000:0:111"
            },
            "scope": 13206,
            "src": "3859:205:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              380,
              11558,
              12496
            ],
            "body": {
              "id": 13204,
              "nodeType": "Block",
              "src": "4278:62:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13201,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13190,
                        "src": "4320:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13199,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4296:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GeoRewards_$13206_$",
                          "typeString": "type(contract super GeoRewards)"
                        }
                      },
                      "id": 13200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12496,
                      "src": "4296:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 13202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4296:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13198,
                  "id": 13203,
                  "nodeType": "Return",
                  "src": "4289:43:111"
                }
              ]
            },
            "documentation": {
              "id": 13188,
              "nodeType": "StructuredDocumentation",
              "src": "4072:58:111",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 13205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13195,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13192,
                  "name": "AccessControlEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 512,
                  "src": "4212:23:111"
                },
                {
                  "id": 13193,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12282,
                  "src": "4237:6:111"
                },
                {
                  "id": 13194,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12784,
                  "src": "4245:16:111"
                }
              ],
              "src": "4203:59:111"
            },
            "parameters": {
              "id": 13191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13190,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13205,
                  "src": "4163:18:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 13189,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4162:20:111"
            },
            "returnParameters": {
              "id": 13198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13197,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13205,
                  "src": "4272:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4272:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4271:6:111"
            },
            "scope": 13206,
            "src": "4136:204:111",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 13207,
        "src": "976:3367:111"
      }
    ],
    "src": "35:4310:111"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/presets/GeoRewards.sol",
    "exportedSymbols": {
      "AccessControl": [
        322
      ],
      "AccessControlEnumerable": [
        512
      ],
      "Address": [
        14898
      ],
      "Context": [
        15006
      ],
      "Counters": [
        15067
      ],
      "ERC165": [
        16064
      ],
      "ERC721": [
        12282
      ],
      "ERC721Burnable": [
        12446
      ],
      "ERC721Enumerable": [
        12784
      ],
      "ERC721Pausable": [
        12821
      ],
      "EnumerableSet": [
        18249
      ],
      "GeoRewards": [
        13206
      ],
      "IAccessControl": [
        42
      ],
      "IAccessControlEnumerable": [
        344
      ],
      "IERC165": [
        16390
      ],
      "IERC721": [
        12398
      ],
      "IERC721Enumerable": [
        12980
      ],
      "IERC721Metadata": [
        13007
      ],
      "IERC721Receiver": [
        12416
      ],
      "Pausable": [
        7948
      ],
      "Strings": [
        15381
      ]
    },
    "id": 13207,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13009,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:111"
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "../ERC721.sol",
        "id": 13010,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12283,
        "src": "62:23:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "../extensions/ERC721Enumerable.sol",
        "id": 13011,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12785,
        "src": "87:44:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "../extensions/ERC721Burnable.sol",
        "id": 13012,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12447,
        "src": "133:42:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
        "file": "../extensions/ERC721Pausable.sol",
        "id": 13013,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 12822,
        "src": "177:42:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "file": "../../../access/AccessControlEnumerable.sol",
        "id": 13014,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 513,
        "src": "221:53:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Context.sol",
        "file": "../../../utils/Context.sol",
        "id": 13015,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 15007,
        "src": "276:36:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "../../../utils/Counters.sol",
        "id": 13016,
        "nodeType": "ImportDirective",
        "scope": 13207,
        "sourceUnit": 15068,
        "src": "314:37:111",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13018,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15006,
              "src": "999:7:111"
            },
            "id": 13019,
            "nodeType": "InheritanceSpecifier",
            "src": "999:7:111"
          },
          {
            "baseName": {
              "id": 13020,
              "name": "AccessControlEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 512,
              "src": "1008:23:111"
            },
            "id": 13021,
            "nodeType": "InheritanceSpecifier",
            "src": "1008:23:111"
          },
          {
            "baseName": {
              "id": 13022,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12784,
              "src": "1033:16:111"
            },
            "id": 13023,
            "nodeType": "InheritanceSpecifier",
            "src": "1033:16:111"
          },
          {
            "baseName": {
              "id": 13024,
              "name": "ERC721Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12446,
              "src": "1051:14:111"
            },
            "id": 13025,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:14:111"
          },
          {
            "baseName": {
              "id": 13026,
              "name": "ERC721Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12821,
              "src": "1067:14:111"
            },
            "id": 13027,
            "nodeType": "InheritanceSpecifier",
            "src": "1067:14:111"
          }
        ],
        "contractDependencies": [
          42,
          322,
          344,
          512,
          7948,
          12282,
          12398,
          12446,
          12784,
          12821,
          12980,
          13007,
          15006,
          16064,
          16390
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13017,
          "nodeType": "StructuredDocumentation",
          "src": "355:619:111",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 13206,
        "linearizedBaseContracts": [
          13206,
          12821,
          7948,
          12446,
          12784,
          12980,
          12282,
          13007,
          12398,
          512,
          322,
          16064,
          16390,
          42,
          15006,
          344
        ],
        "name": "GeoRewards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13031,
            "libraryName": {
              "id": 13028,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15067,
              "src": "1095:8:111"
            },
            "nodeType": "UsingForDirective",
            "src": "1089:36:111",
            "typeName": {
              "id": 13030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13029,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15012,
                "src": "1108:16:111"
              },
              "referencedDeclaration": 15012,
              "src": "1108:16:111",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$15012_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 13036,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1133:62:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13032,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1133:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 13034,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1181:13:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 13033,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1171:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13035,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1171:24:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 13041,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1202:62:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 13037,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1202:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 13039,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1250:13:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 13038,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1240:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 13040,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1240:24:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13044,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1273:40:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$15012_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 13043,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13042,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15012,
                "src": "1273:16:111"
              },
              "referencedDeclaration": 15012,
              "src": "1273:16:111",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$15012_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13046,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nodeType": "VariableDeclaration",
            "scope": 13206,
            "src": "1322:28:111",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13045,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1322:6:111",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13082,
              "nodeType": "Block",
              "src": "1724:202:111",
              "statements": [
                {
                  "expression": {
                    "id": 13062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13060,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13046,
                      "src": "1735:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13061,
                      "name": "baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13053,
                      "src": "1751:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1735:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13063,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:28:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13065,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1787:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13066,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1807:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1807:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13064,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        511
                      ],
                      "referencedDeclaration": 511,
                      "src": "1776:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:44:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13069,
                  "nodeType": "ExpressionStatement",
                  "src": "1776:44:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13071,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13036,
                        "src": "1844:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13072,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1857:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1857:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13070,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        511
                      ],
                      "referencedDeclaration": 511,
                      "src": "1833:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1833:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13075,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:37:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13077,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13041,
                        "src": "1892:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13078,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1905:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 13079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13076,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        511
                      ],
                      "referencedDeclaration": 511,
                      "src": "1881:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 13080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13081,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:37:111"
                }
              ]
            },
            "documentation": {
              "id": 13047,
              "nodeType": "StructuredDocumentation",
              "src": "1359:256:111",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 13083,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13056,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13049,
                    "src": "1710:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 13057,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13051,
                    "src": "1716:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 13058,
                "modifierName": {
                  "id": 13055,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12282,
                  "src": "1703:6:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1703:20:111"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13049,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 13083,
                  "src": "1633:18:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13048,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13051,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 13083,
                  "src": "1653:20:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13053,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 13083,
                  "src": "1675:26:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13052,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1632:70:111"
            },
            "returnParameters": {
              "id": 13059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1724:0:111"
            },
            "scope": 13206,
            "src": "1621:305:111",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11681
            ],
            "body": {
              "id": 13091,
              "nodeType": "Block",
              "src": "2009:39:111",
              "statements": [
                {
                  "expression": {
                    "id": 13089,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13046,
                    "src": "2027:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13088,
                  "id": 13090,
                  "nodeType": "Return",
                  "src": "2020:20:111"
                }
              ]
            },
            "id": 13092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13085,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1976:8:111"
            },
            "parameters": {
              "id": 13084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1951:2:111"
            },
            "returnParameters": {
              "id": 13088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13087,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13092,
                  "src": "1994:13:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13086,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:15:111"
            },
            "scope": 13206,
            "src": "1934:114:111",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13119,
              "nodeType": "Block",
              "src": "2477:366:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13100,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13036,
                            "src": "2504:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13101,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14994,
                              "src": "2517:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2517:12:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13099,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "2496:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2496:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 13104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:63:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 13098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2488:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:108:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13106,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:108:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13108,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13095,
                        "src": "2767:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13109,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13044,
                            "src": "2771:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$15012_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 13110,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15024,
                          "src": "2771:23:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$15012_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$15012_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 13111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2771:25:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13107,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12062,
                      "src": "2761:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13113,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:36:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13114,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13044,
                        "src": "2808:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$15012_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 13116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15038,
                      "src": "2808:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$15012_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$15012_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 13117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2808:27:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13118,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:27:111"
                }
              ]
            },
            "documentation": {
              "id": 13093,
              "nodeType": "StructuredDocumentation",
              "src": "2056:374:111",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 13120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13095,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13120,
                  "src": "2450:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2449:12:111"
            },
            "returnParameters": {
              "id": 13097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2477:0:111"
            },
            "scope": 13206,
            "src": "2436:407:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13130,
              "nodeType": "Block",
              "src": "3002:51:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13126,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13044,
                        "src": "3020:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$15012_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 13127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15024,
                      "src": "3020:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$15012_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$15012_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 13128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3020:25:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13125,
                  "id": 13129,
                  "nodeType": "Return",
                  "src": "3013:32:111"
                }
              ]
            },
            "documentation": {
              "id": 13121,
              "nodeType": "StructuredDocumentation",
              "src": "2851:87:111",
              "text": " @dev Returns the next token id\n See {ERC721-_mint}."
            },
            "functionSelector": "caa0f92a",
            "id": 13131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextTokenId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2969:2:111"
            },
            "returnParameters": {
              "id": 13125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13124,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13131,
                  "src": "2992:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2991:10:111"
            },
            "scope": 13206,
            "src": "2946:107:111",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13147,
              "nodeType": "Block",
              "src": "3300:147:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13137,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13041,
                            "src": "3327:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13138,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14994,
                              "src": "3340:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3340:12:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13136,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "3319:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3319:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 13141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3355:64:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 13135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3311:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:109:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13143,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:109:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13144,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7931,
                      "src": "3431:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3431:8:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13146,
                  "nodeType": "ExpressionStatement",
                  "src": "3431:8:111"
                }
              ]
            },
            "documentation": {
              "id": 13132,
              "nodeType": "StructuredDocumentation",
              "src": "3061:201:111",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 13148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3282:2:111"
            },
            "returnParameters": {
              "id": 13134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3300:0:111"
            },
            "scope": 13206,
            "src": "3268:179:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13164,
              "nodeType": "Block",
              "src": "3700:151:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 13154,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13041,
                            "src": "3727:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13155,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14994,
                              "src": "3740:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 13156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3740:12:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13153,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "3719:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 13157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3719:34:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 13158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3755:66:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 13152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3711:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3711:111:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13160,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:111:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13161,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7947,
                      "src": "3833:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 13162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3833:10:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13163,
                  "nodeType": "ExpressionStatement",
                  "src": "3833:10:111"
                }
              ]
            },
            "documentation": {
              "id": 13149,
              "nodeType": "StructuredDocumentation",
              "src": "3455:205:111",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 13165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3682:2:111"
            },
            "returnParameters": {
              "id": 13151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3700:0:111"
            },
            "scope": 13206,
            "src": "3666:185:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12281,
              12622,
              12820
            ],
            "body": {
              "id": 13186,
              "nodeType": "Block",
              "src": "4000:64:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13181,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13167,
                        "src": "4038:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13182,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13169,
                        "src": "4044:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13183,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13171,
                        "src": "4048:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13178,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4011:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GeoRewards_$13206_$",
                          "typeString": "type(contract super GeoRewards)"
                        }
                      },
                      "id": 13180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12820,
                      "src": "4011:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4011:45:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13185,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:45:111"
                }
              ]
            },
            "id": 13187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13176,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13173,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12282,
                  "src": "3958:6:111"
                },
                {
                  "id": 13174,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12784,
                  "src": "3966:16:111"
                },
                {
                  "id": 13175,
                  "name": "ERC721Pausable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12821,
                  "src": "3984:14:111"
                }
              ],
              "src": "3949:50:111"
            },
            "parameters": {
              "id": 13172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13167,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 13187,
                  "src": "3889:12:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13169,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 13187,
                  "src": "3903:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13171,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13187,
                  "src": "3915:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3915:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3888:43:111"
            },
            "returnParameters": {
              "id": 13177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4000:0:111"
            },
            "scope": 13206,
            "src": "3859:205:111",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              380,
              11558,
              12496
            ],
            "body": {
              "id": 13204,
              "nodeType": "Block",
              "src": "4278:62:111",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13201,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13190,
                        "src": "4320:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13199,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "4296:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GeoRewards_$13206_$",
                          "typeString": "type(contract super GeoRewards)"
                        }
                      },
                      "id": 13200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12496,
                      "src": "4296:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 13202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4296:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13198,
                  "id": 13203,
                  "nodeType": "Return",
                  "src": "4289:43:111"
                }
              ]
            },
            "documentation": {
              "id": 13188,
              "nodeType": "StructuredDocumentation",
              "src": "4072:58:111",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 13205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13195,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13192,
                  "name": "AccessControlEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 512,
                  "src": "4212:23:111"
                },
                {
                  "id": 13193,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12282,
                  "src": "4237:6:111"
                },
                {
                  "id": 13194,
                  "name": "ERC721Enumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12784,
                  "src": "4245:16:111"
                }
              ],
              "src": "4203:59:111"
            },
            "parameters": {
              "id": 13191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13190,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 13205,
                  "src": "4163:18:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 13189,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4163:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4162:20:111"
            },
            "returnParameters": {
              "id": 13198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13197,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 13205,
                  "src": "4272:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4272:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4271:6:111"
            },
            "scope": 13206,
            "src": "4136:204:111",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 13207,
        "src": "976:3367:111"
      }
    ],
    "src": "35:4310:111"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T11:30:52.950Z",
  "devdoc": {
    "details": "{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getNextTokenId()": {
        "details": "Returns the next token id See {ERC721-_mint}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Overload {grantRole} to track enumerable memberships"
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Overload {renounceRole} to track enumerable memberships"
      },
      "revokeRole(bytes32,address)": {
        "details": "Overload {revokeRole} to track enumerable memberships"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}