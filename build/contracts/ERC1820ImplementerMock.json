{
  "contractName": "ERC1820ImplementerMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "registerInterfaceForAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"registerInterfaceForAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol\":\"ERC1820ImplementerMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol\":{\"keccak256\":\"0x6bc1ee31bbdf3c15380579aa640a42c2bcde152b07086aabcd12c1311d12bfb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c412db77d6fed2140ff62eae5b7f37032c86064802f1bd1a604853c8ac23058\",\"dweb:/ipfs/QmTRsHcHNJMyjBSekRUS1A3BfibVvnzCdZ88FoAJR4yQDB\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x1878bf32aa15627375fea7c1530c6d223b9bc44f9f23dbcafa7d2794d52ca37c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ea2287d1891f98bf7c71723c462f8f1156bacadd797e5b57ef5da955cb2a47a\",\"dweb:/ipfs/QmYHtrw9xQvWs87mwvaYGZwmxtc95bhcCrDKhwhSFGk2eu\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xa7d86a2886225a2904446fdc9319b861959ad2bd68583cf88b640d3db14b99f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fce8e5021e4053c46c7b34d2c05fb101ff4001a6fbc26e4bcbec708e181eae8\",\"dweb:/ipfs/QmUwA8xYYdbxYH6p5P269YjLoXWdr3NXVeunpzNfR98Xzq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b610055600480360381019061005091906101c1565b610087565b604051610062919061020c565b60405180910390f35b610085600480360381019061008091906101c1565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813590506101a681610263565b92915050565b6000813590506101bb8161027a565b92915050565b600080604083850312156101d457600080fd5b60006101e2858286016101ac565b92505060206101f385828601610197565b9150509250929050565b61020681610239565b82525050565b600060208201905061022160008301846101fd565b92915050565b600061023282610243565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61026c81610227565b811461027757600080fd5b50565b61028381610239565b811461028e57600080fd5b5056fea2646970667358221220a2c920856b951f7180f940c82a7995ce8649a9ebd3d0a62508d92dff48a0874064736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b610055600480360381019061005091906101c1565b610087565b604051610062919061020c565b60405180910390f35b610085600480360381019061008091906101c1565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813590506101a681610263565b92915050565b6000813590506101bb8161027a565b92915050565b600080604083850312156101d457600080fd5b60006101e2858286016101ac565b92505060206101f385828601610197565b9150509250929050565b61020681610239565b82525050565b600060208201905061022160008301846101fd565b92915050565b600061023282610243565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61026c81610227565b811461027757600080fd5b50565b61028381610239565b811461028e57600080fd5b5056fea2646970667358221220a2c920856b951f7180f940c82a7995ce8649a9ebd3d0a62508d92dff48a0874064736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "121:219:32:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "121:219:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;734:238:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;182:155:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;734:238:133;853:7;880:20;:35;901:13;880:35;;;;;;;;;;;:44;916:7;880:44;;;;;;;;;;;;;;;;;;;;;;;;;:84;;959:4;951:13;;880:84;;;525:33;880:84;873:91;;734:238;;;;:::o;182:155:32:-;277:52;306:13;321:7;277:28;:52::i;:::-;182:155;;:::o;1216:165:133:-;1369:4;1322:20;:35;1343:13;1322:35;;;;;;;;;;;:44;1358:7;1322:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1216:165;;:::o;7:139:143:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:118::-;797:24;815:5;797:24;:::i;:::-;792:3;785:37;775:53;;:::o;834:222::-;;965:2;954:9;950:18;942:26;;978:71;1046:1;1035:9;1031:17;1022:6;978:71;:::i;:::-;932:124;;;;:::o;1062:96::-;;1128:24;1146:5;1128:24;:::i;:::-;1117:35;;1107:51;;;:::o;1164:77::-;;1230:5;1219:16;;1209:32;;;:::o;1247:126::-;;1324:42;1317:5;1313:54;1302:65;;1292:81;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:2;;1491:1;1488;1481:12;1432:2;1422:79;:::o;1507:122::-;1580:24;1598:5;1580:24;:::i;:::-;1573:5;1570:35;1560:2;;1619:1;1616;1609:12;1560:2;1550:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/introspection/ERC1820Implementer.sol\";\r\n\r\ncontract ERC1820ImplementerMock is ERC1820Implementer {\r\n    function registerInterfaceForAddress(bytes32 interfaceHash, address account) public {\r\n        _registerInterfaceForAddress(interfaceHash, account);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol",
  "ast": {
    "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        16378
      ],
      "ERC1820ImplementerMock": [
        3412
      ],
      "IERC1820Implementer": [
        16404
      ]
    },
    "id": 3413,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3395,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:32"
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 3396,
        "nodeType": "ImportDirective",
        "scope": 3413,
        "sourceUnit": 16379,
        "src": "62:55:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3397,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16378,
              "src": "156:18:32"
            },
            "id": 3398,
            "nodeType": "InheritanceSpecifier",
            "src": "156:18:32"
          }
        ],
        "contractDependencies": [
          16378,
          16404
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3412,
        "linearizedBaseContracts": [
          3412,
          16378,
          16404
        ],
        "name": "ERC1820ImplementerMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3410,
              "nodeType": "Block",
              "src": "266:71:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3406,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3400,
                        "src": "306:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3407,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "321:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3405,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16377,
                      "src": "277:28:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:52:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3409,
                  "nodeType": "ExpressionStatement",
                  "src": "277:52:32"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 3411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "219:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3399,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3402,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "242:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "218:40:32"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:32"
            },
            "scope": 3412,
            "src": "182:155:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3413,
        "src": "121:219:32"
      }
    ],
    "src": "35:307:32"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        16378
      ],
      "ERC1820ImplementerMock": [
        3412
      ],
      "IERC1820Implementer": [
        16404
      ]
    },
    "id": 3413,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3395,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:32"
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 3396,
        "nodeType": "ImportDirective",
        "scope": 3413,
        "sourceUnit": 16379,
        "src": "62:55:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3397,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16378,
              "src": "156:18:32"
            },
            "id": 3398,
            "nodeType": "InheritanceSpecifier",
            "src": "156:18:32"
          }
        ],
        "contractDependencies": [
          16378,
          16404
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3412,
        "linearizedBaseContracts": [
          3412,
          16378,
          16404
        ],
        "name": "ERC1820ImplementerMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3410,
              "nodeType": "Block",
              "src": "266:71:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3406,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3400,
                        "src": "306:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3407,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3402,
                        "src": "321:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3405,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16377,
                      "src": "277:28:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:52:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3409,
                  "nodeType": "ExpressionStatement",
                  "src": "277:52:32"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 3411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "219:21:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3399,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3402,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "242:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "218:40:32"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:32"
            },
            "scope": 3412,
            "src": "182:155:32",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3413,
        "src": "121:219:32"
      }
    ],
    "src": "35:307:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T09:42:08.606Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  }
}