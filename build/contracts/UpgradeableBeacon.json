{
  "contractName": "UpgradeableBeacon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff947df457c211856a24ba4496e247e5320a22f4440c7c17c0a69370334bfd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6c4c65ef66c4a9e66f423cba92633b04b8b84827f340a43457693f3b5749d4f\",\"dweb:/ipfs/QmPozCmBaHoYCp3dDshZd8Wg54n7uDpvH6XMxCnhEik9FE\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x1787aee0279f26d98400e030f9780d4fba6dc9aec7388fa31deca8959f47adb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ad655bbccda034dfa9dcce58be2f14105c3db41909dd8983febb03020c0954\",\"dweb:/ipfs/QmemV5KpajYrN78JMYgYctESkgfJvzRmMCqz88eiFyER9u\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0xcec5dbc3f24533dc705ca56c80eec0d9916dccbfab23815cada9546707ac31ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a891005191dae166b82a89a97bf60ec2501d211f432a72e8954b522f24e639f\",\"dweb:/ipfs/QmdhER1wmtkEPEBMWGuQNeHvC7sSbP5DJ4mybzeSukyjgH\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x56c55493b8912cb4729acd8a226a37dfb815c104cb57536a899bdaa708b45e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13456b3168b87f09c352f0074f4942b07651b6c1e153860879c3ae9ae0426cb4\",\"dweb:/ipfs/QmZnZ9FEYxGBGx1AqRSv85XZwN9pBDYJxUKQ2ydYdQcyDj\"]},\"/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xd66de64ebb51d57721ac10bb1571dc8b2798cd48723b8222341bc0e65372e050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b561766010211e50ffdc7363fb2227d15e1c846d1ee9ff33532a86fce8b6d5\",\"dweb:/ipfs/Qme61ahYQqCyYLhQmF4cyKe539E9f4HK1d9PrEb4MDKEtr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ab9380380610ab9833981810160405281019061003291906101bb565b60006100426100f560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100ef816100fd60201b60201c565b506102c4565b600033905090565b6101108161019360201b6104db1760201c565b61014f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101469061024a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b6000815190506101b5816102ad565b92915050565b6000602082840312156101cd57600080fd5b60006101db848285016101a6565b91505092915050565b60006101f160338361026a565b91507f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60008301527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152610263816101e4565b9050919050565b600082825260208201905092915050565b60006102868261028d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6102b68161027b565b81146102c157600080fd5b50565b6107e6806102d36000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610078578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b61007660048036038101906100719190610597565b6100da565b005b6100806101a5565b60405161008d91906106db565b60405180910390f35b61009e6101cf565b005b6100a8610309565b6040516100b591906106db565b60405180910390f35b6100d860048036038101906100d39190610597565b610332565b005b6100e26104ee565b73ffffffffffffffffffffffffffffffffffffffff16610100610309565b73ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610736565b60405180910390fd5b61015f816104f6565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d76104ee565b73ffffffffffffffffffffffffffffffffffffffff166101f5610309565b73ffffffffffffffffffffffffffffffffffffffff161461024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610736565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61033a6104ee565b73ffffffffffffffffffffffffffffffffffffffff16610358610309565b73ffffffffffffffffffffffffffffffffffffffff16146103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610736565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561041e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610415906106f6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600033905090565b6104ff816104db565b61053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610716565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061059181610799565b92915050565b6000602082840312156105a957600080fd5b60006105b784828501610582565b91505092915050565b6105c981610767565b82525050565b60006105dc602683610756565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610642603383610756565b91507f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60008301527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006020830152604082019050919050565b60006106a8602083610756565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106f060008301846105c0565b92915050565b6000602082019050818103600083015261070f816105cf565b9050919050565b6000602082019050818103600083015261072f81610635565b9050919050565b6000602082019050818103600083015261074f8161069b565b9050919050565b600082825260208201905092915050565b600061077282610779565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6107a281610767565b81146107ad57600080fd5b5056fea2646970667358221220f7c76eb93b37a57d557416d3713c5f301e09b014271f5be1ac3dbfe54ea9253f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610078578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b61007660048036038101906100719190610597565b6100da565b005b6100806101a5565b60405161008d91906106db565b60405180910390f35b61009e6101cf565b005b6100a8610309565b6040516100b591906106db565b60405180910390f35b6100d860048036038101906100d39190610597565b610332565b005b6100e26104ee565b73ffffffffffffffffffffffffffffffffffffffff16610100610309565b73ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610736565b60405180910390fd5b61015f816104f6565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d76104ee565b73ffffffffffffffffffffffffffffffffffffffff166101f5610309565b73ffffffffffffffffffffffffffffffffffffffff161461024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610736565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61033a6104ee565b73ffffffffffffffffffffffffffffffffffffffff16610358610309565b73ffffffffffffffffffffffffffffffffffffffff16146103ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a590610736565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561041e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610415906106f6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600033905090565b6104ff816104db565b61053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610716565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008135905061059181610799565b92915050565b6000602082840312156105a957600080fd5b60006105b784828501610582565b91505092915050565b6105c981610767565b82525050565b60006105dc602683610756565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610642603383610756565b91507f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60008301527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006020830152604082019050919050565b60006106a8602083610756565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106f060008301846105c0565b92915050565b6000602082019050818103600083015261070f816105cf565b9050919050565b6000602082019050818103600083015261072f81610635565b9050919050565b6000602082019050818103600083015261074f8161069b565b9050919050565b600082825260208201905092915050565b600061077282610779565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6107a281610767565b81146107ad57600080fd5b5056fea2646970667358221220f7c76eb93b37a57d557416d3713c5f301e09b014271f5be1ac3dbfe54ea9253f64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "487:1545:73:-:0;;;887:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;893:17:2;913:12;:10;;;:12;;:::i;:::-;893:32;;945:9;936:6;;:18;;;;;;;;;;;;;;;;;;1003:9;970:43;;999:1;970:43;;;;;;;;;;;;867:154;935:35:73;954:15;935:18;;;:35;;:::i;:::-;887:91;487:1545;;601:98:120;654:7;681:10;674:17;;601:98;:::o;1800:229:73:-;1882:37;1901:17;1882:18;;;;;:37;;:::i;:::-;1874:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:17;1986:15;;:35;;;;;;;;;;;;;;;;;;1800:229;:::o;743:422:118:-;803:4;1011:12;1122:7;1110:20;1102:28;;1156:1;1149:4;:8;1142:15;;;743:422;;;:::o;7:143:143:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:383::-;;609:67;673:2;668:3;609:67;:::i;:::-;602:74;;706:34;702:1;697:3;693:11;686:55;772:21;767:2;762:3;758:12;751:43;820:2;815:3;811:12;804:19;;592:237;;;:::o;835:419::-;;1039:2;1028:9;1024:18;1016:26;;1088:9;1082:4;1078:20;1074:1;1063:9;1059:17;1052:47;1116:131;1242:4;1116:131;:::i;:::-;1108:139;;1006:248;;;:::o;1260:169::-;;1378:6;1373:3;1366:19;1418:4;1413:3;1409:14;1394:29;;1356:73;;;;:::o;1435:96::-;;1501:24;1519:5;1501:24;:::i;:::-;1490:35;;1480:51;;;:::o;1537:126::-;;1614:42;1607:5;1603:54;1592:65;;1582:81;;;:::o;1669:122::-;1742:24;1760:5;1742:24;:::i;:::-;1735:5;1732:35;1722:2;;1781:1;1778;1771:12;1722:2;1712:79;:::o;487:1545:73:-;;;;;;;",
  "deployedSourceMap": "487:1545:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1061:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:148:2;;;:::i;:::-;;1102:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2056:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1446:170:73;1333:12:2;:10;:12::i;:::-;1322:23;;:7;:5;:7::i;:::-;:23;;;1314:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1528:37:73::1;1547:17;1528:18;:37::i;:::-;1590:17;1581:27;;;;;;;;;;;;1446:170:::0;:::o;1061:114::-;1125:7;1152:15;;;;;;;;;;;1145:22;;1061:114;:::o;1753:148:2:-;1333:12;:10;:12::i;:::-;1322:23;;:7;:5;:7::i;:::-;:23;;;1314:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1860:1:::1;1823:40;;1844:6;::::0;::::1;;;;;;;;1823:40;;;;;;;;;;;;1891:1;1874:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1753:148::o:0;1102:87::-;1148:7;1175:6;;;;;;;;;;;1168:13;;1102:87;:::o;2056:244::-;1333:12;:10;:12::i;:::-;1322:23;;:7;:5;:7::i;:::-;:23;;;1314:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2165:1:::1;2145:22;;:8;:22;;;;2137:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2255:8;2226:38;;2247:6;::::0;::::1;;;;;;;;2226:38;;;;;;;;;;;;2284:8;2275:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2056:244:::0;:::o;743:422:118:-;803:4;1011:12;1122:7;1110:20;1102:28;;1156:1;1149:4;:8;1142:15;;;743:422;;;:::o;601:98:120:-;654:7;681:10;674:17;;601:98;:::o;1800:229:73:-;1882:37;1901:17;1882:18;:37::i;:::-;1874:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:17;1986:15;;:35;;;;;;;;;;;;;;;;;;1800:229;:::o;7:139:143:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:370::-;;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;804:34;800:1;795:3;791:11;784:55;870:8;865:2;860:3;856:12;849:30;905:2;900:3;896:12;889:19;;690:224;;;:::o;920:383::-;;1083:67;1147:2;1142:3;1083:67;:::i;:::-;1076:74;;1180:34;1176:1;1171:3;1167:11;1160:55;1246:21;1241:2;1236:3;1232:12;1225:43;1294:2;1289:3;1285:12;1278:19;;1066:237;;;:::o;1309:330::-;;1472:67;1536:2;1531:3;1472:67;:::i;:::-;1465:74;;1569:34;1565:1;1560:3;1556:11;1549:55;1630:2;1625:3;1621:12;1614:19;;1455:184;;;:::o;1645:222::-;;1776:2;1765:9;1761:18;1753:26;;1789:71;1857:1;1846:9;1842:17;1833:6;1789:71;:::i;:::-;1743:124;;;;:::o;1873:419::-;;2077:2;2066:9;2062:18;2054:26;;2126:9;2120:4;2116:20;2112:1;2101:9;2097:17;2090:47;2154:131;2280:4;2154:131;:::i;:::-;2146:139;;2044:248;;;:::o;2298:419::-;;2502:2;2491:9;2487:18;2479:26;;2551:9;2545:4;2541:20;2537:1;2526:9;2522:17;2515:47;2579:131;2705:4;2579:131;:::i;:::-;2571:139;;2469:248;;;:::o;2723:419::-;;2927:2;2916:9;2912:18;2904:26;;2976:9;2970:4;2966:20;2962:1;2951:9;2947:17;2940:47;3004:131;3130:4;3004:131;:::i;:::-;2996:139;;2894:248;;;:::o;3148:169::-;;3266:6;3261:3;3254:19;3306:4;3301:3;3297:14;3282:29;;3244:73;;;;:::o;3323:96::-;;3389:24;3407:5;3389:24;:::i;:::-;3378:35;;3368:51;;;:::o;3425:126::-;;3502:42;3495:5;3491:54;3480:65;;3470:81;;;:::o;3557:122::-;3630:24;3648:5;3630:24;:::i;:::-;3623:5;3620:35;3610:2;;3669:1;3666;3659:12;3610:2;3600:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IBeacon.sol\";\r\nimport \"../../access/Ownable.sol\";\r\nimport \"../../utils/Address.sol\";\r\n\r\n/**\r\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\r\n * implementation contract, which is where they will delegate all function calls.\r\n *\r\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\r\n */\r\ncontract UpgradeableBeacon is IBeacon, Ownable {\r\n    address private _implementation;\r\n\r\n    /**\r\n     * @dev Emitted when the implementation returned by the beacon is changed.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\r\n     * beacon.\r\n     */\r\n    constructor(address implementation_) {\r\n        _setImplementation(implementation_);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function implementation() public view virtual override returns (address) {\r\n        return _implementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the beacon to a new implementation.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - msg.sender must be the owner of the contract.\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the implementation contract address for this beacon\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\r\n        _implementation = newImplementation;\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol",
  "ast": {
    "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        14898
      ],
      "Context": [
        15006
      ],
      "IBeacon": [
        7393
      ],
      "Ownable": [
        622
      ],
      "UpgradeableBeacon": [
        7468
      ]
    },
    "id": 7469,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7395,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:73"
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 7396,
        "nodeType": "ImportDirective",
        "scope": 7469,
        "sourceUnit": 7394,
        "src": "62:23:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 7397,
        "nodeType": "ImportDirective",
        "scope": 7469,
        "sourceUnit": 623,
        "src": "87:34:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7398,
        "nodeType": "ImportDirective",
        "scope": 7469,
        "sourceUnit": 14899,
        "src": "123:33:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7400,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7393,
              "src": "517:7:73"
            },
            "id": 7401,
            "nodeType": "InheritanceSpecifier",
            "src": "517:7:73"
          },
          {
            "baseName": {
              "id": 7402,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 622,
              "src": "526:7:73"
            },
            "id": 7403,
            "nodeType": "InheritanceSpecifier",
            "src": "526:7:73"
          }
        ],
        "contractDependencies": [
          622,
          7393,
          15006
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7399,
          "nodeType": "StructuredDocumentation",
          "src": "160:325:73",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 7468,
        "linearizedBaseContracts": [
          7468,
          622,
          15006,
          7393
        ],
        "name": "UpgradeableBeacon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7405,
            "mutability": "mutable",
            "name": "_implementation",
            "nodeType": "VariableDeclaration",
            "scope": 7468,
            "src": "541:31:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:73",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7406,
              "nodeType": "StructuredDocumentation",
              "src": "581:92:73",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 7410,
            "name": "Upgraded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 7410,
                  "src": "694:30:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:32:73"
            },
            "src": "679:47:73"
          },
          {
            "body": {
              "id": 7420,
              "nodeType": "Block",
              "src": "924:54:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7417,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "954:15:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7416,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7467,
                      "src": "935:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:35:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7419,
                  "nodeType": "ExpressionStatement",
                  "src": "935:35:73"
                }
              ]
            },
            "documentation": {
              "id": 7411,
              "nodeType": "StructuredDocumentation",
              "src": "734:147:73",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 7421,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7413,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 7421,
                  "src": "899:23:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:25:73"
            },
            "returnParameters": {
              "id": 7415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:0:73"
            },
            "scope": 7468,
            "src": "887:91:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7392
            ],
            "body": {
              "id": 7430,
              "nodeType": "Block",
              "src": "1134:41:73",
              "statements": [
                {
                  "expression": {
                    "id": 7428,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7405,
                    "src": "1152:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7427,
                  "id": 7429,
                  "nodeType": "Return",
                  "src": "1145:22:73"
                }
              ]
            },
            "documentation": {
              "id": 7422,
              "nodeType": "StructuredDocumentation",
              "src": "986:69:73",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 7431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1107:8:73"
            },
            "parameters": {
              "id": 7423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:2:73"
            },
            "returnParameters": {
              "id": 7427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7431,
                  "src": "1125:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:9:73"
            },
            "scope": 7468,
            "src": "1061:114:73",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7447,
              "nodeType": "Block",
              "src": "1517:99:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7440,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7434,
                        "src": "1547:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7439,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7467,
                      "src": "1528:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:37:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7442,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:37:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7444,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7434,
                        "src": "1590:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7443,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7410,
                      "src": "1581:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:27:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7446,
                  "nodeType": "EmitStatement",
                  "src": "1576:32:73"
                }
              ]
            },
            "documentation": {
              "id": 7432,
              "nodeType": "StructuredDocumentation",
              "src": "1183:257:73",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 7448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7437,
                "modifierName": {
                  "id": 7436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 571,
                  "src": "1507:9:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "1507:9:73"
              }
            ],
            "name": "upgradeTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7434,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 7448,
                  "src": "1465:25:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1464:27:73"
            },
            "returnParameters": {
              "id": 7438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:0:73"
            },
            "scope": 7468,
            "src": "1446:170:73",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7466,
              "nodeType": "Block",
              "src": "1863:166:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7457,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7451,
                            "src": "1901:17:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7455,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14898,
                            "src": "1882:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$14898_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14622,
                          "src": "1882:18:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1882:37:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 7459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1921:53:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 7454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1874:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7461,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:101:73"
                },
                {
                  "expression": {
                    "id": 7464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7462,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7405,
                      "src": "1986:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7463,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "2004:17:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1986:35:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7465,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:35:73"
                }
              ]
            },
            "documentation": {
              "id": 7449,
              "nodeType": "StructuredDocumentation",
              "src": "1624:170:73",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 7467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7451,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 7467,
                  "src": "1828:25:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:27:73"
            },
            "returnParameters": {
              "id": 7453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:0:73"
            },
            "scope": 7468,
            "src": "1800:229:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 7469,
        "src": "487:1545:73"
      }
    ],
    "src": "35:1999:73"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        14898
      ],
      "Context": [
        15006
      ],
      "IBeacon": [
        7393
      ],
      "Ownable": [
        622
      ],
      "UpgradeableBeacon": [
        7468
      ]
    },
    "id": 7469,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7395,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:73"
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 7396,
        "nodeType": "ImportDirective",
        "scope": 7469,
        "sourceUnit": 7394,
        "src": "62:23:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 7397,
        "nodeType": "ImportDirective",
        "scope": 7469,
        "sourceUnit": 623,
        "src": "87:34:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/RogerGangaSundararaj/Documents/GitHub/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7398,
        "nodeType": "ImportDirective",
        "scope": 7469,
        "sourceUnit": 14899,
        "src": "123:33:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7400,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7393,
              "src": "517:7:73"
            },
            "id": 7401,
            "nodeType": "InheritanceSpecifier",
            "src": "517:7:73"
          },
          {
            "baseName": {
              "id": 7402,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 622,
              "src": "526:7:73"
            },
            "id": 7403,
            "nodeType": "InheritanceSpecifier",
            "src": "526:7:73"
          }
        ],
        "contractDependencies": [
          622,
          7393,
          15006
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7399,
          "nodeType": "StructuredDocumentation",
          "src": "160:325:73",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 7468,
        "linearizedBaseContracts": [
          7468,
          622,
          15006,
          7393
        ],
        "name": "UpgradeableBeacon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7405,
            "mutability": "mutable",
            "name": "_implementation",
            "nodeType": "VariableDeclaration",
            "scope": 7468,
            "src": "541:31:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7404,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "541:7:73",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7406,
              "nodeType": "StructuredDocumentation",
              "src": "581:92:73",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 7410,
            "name": "Upgraded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 7410,
                  "src": "694:30:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:32:73"
            },
            "src": "679:47:73"
          },
          {
            "body": {
              "id": 7420,
              "nodeType": "Block",
              "src": "924:54:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7417,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7413,
                        "src": "954:15:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7416,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7467,
                      "src": "935:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:35:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7419,
                  "nodeType": "ExpressionStatement",
                  "src": "935:35:73"
                }
              ]
            },
            "documentation": {
              "id": 7411,
              "nodeType": "StructuredDocumentation",
              "src": "734:147:73",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 7421,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7413,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 7421,
                  "src": "899:23:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:25:73"
            },
            "returnParameters": {
              "id": 7415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:0:73"
            },
            "scope": 7468,
            "src": "887:91:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7392
            ],
            "body": {
              "id": 7430,
              "nodeType": "Block",
              "src": "1134:41:73",
              "statements": [
                {
                  "expression": {
                    "id": 7428,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7405,
                    "src": "1152:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7427,
                  "id": 7429,
                  "nodeType": "Return",
                  "src": "1145:22:73"
                }
              ]
            },
            "documentation": {
              "id": 7422,
              "nodeType": "StructuredDocumentation",
              "src": "986:69:73",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 7431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1107:8:73"
            },
            "parameters": {
              "id": 7423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:2:73"
            },
            "returnParameters": {
              "id": 7427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7426,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7431,
                  "src": "1125:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:9:73"
            },
            "scope": 7468,
            "src": "1061:114:73",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7447,
              "nodeType": "Block",
              "src": "1517:99:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7440,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7434,
                        "src": "1547:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7439,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7467,
                      "src": "1528:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:37:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7442,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:37:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7444,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7434,
                        "src": "1590:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7443,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7410,
                      "src": "1581:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:27:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7446,
                  "nodeType": "EmitStatement",
                  "src": "1576:32:73"
                }
              ]
            },
            "documentation": {
              "id": 7432,
              "nodeType": "StructuredDocumentation",
              "src": "1183:257:73",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 7448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7437,
                "modifierName": {
                  "id": 7436,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 571,
                  "src": "1507:9:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "1507:9:73"
              }
            ],
            "name": "upgradeTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7434,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 7448,
                  "src": "1465:25:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1464:27:73"
            },
            "returnParameters": {
              "id": 7438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:0:73"
            },
            "scope": 7468,
            "src": "1446:170:73",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7466,
              "nodeType": "Block",
              "src": "1863:166:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7457,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7451,
                            "src": "1901:17:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7455,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14898,
                            "src": "1882:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$14898_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14622,
                          "src": "1882:18:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1882:37:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 7459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1921:53:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 7454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1874:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7461,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:101:73"
                },
                {
                  "expression": {
                    "id": 7464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7462,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7405,
                      "src": "1986:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7463,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7451,
                      "src": "2004:17:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1986:35:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7465,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:35:73"
                }
              ]
            },
            "documentation": {
              "id": 7449,
              "nodeType": "StructuredDocumentation",
              "src": "1624:170:73",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 7467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7451,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 7467,
                  "src": "1828:25:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1827:27:73"
            },
            "returnParameters": {
              "id": 7453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1863:0:73"
            },
            "scope": 7468,
            "src": "1800:229:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 7469,
        "src": "487:1545:73"
      }
    ],
    "src": "35:1999:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-26T09:42:15.414Z",
  "devdoc": {
    "details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation returned by the beacon is changed."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
      },
      "implementation()": {
        "details": "Returns the current implementation address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}